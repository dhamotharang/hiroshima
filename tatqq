warning: LF will be replaced by CRLF in Hiroshima.WebApi/Hiroshima.WebApi.csproj.
The file will have its original line endings in your working directory
[1mdiff --git a/Hiroshima.Common/Hiroshima.Common.csproj b/Hiroshima.Common/Hiroshima.Common.csproj[m
[1mindex 493f30a..810b6c6 100644[m
[1m--- a/Hiroshima.Common/Hiroshima.Common.csproj[m
[1m+++ b/Hiroshima.Common/Hiroshima.Common.csproj[m
[36m@@ -1,10 +1,11 @@[m
[31m-<Project Sdk="Microsoft.NET.Sdk">[m
[32m+[m[32mï»¿<Project Sdk="Microsoft.NET.Sdk">[m
 [m
   <PropertyGroup>[m
     <TargetFramework>netcoreapp3.0</TargetFramework>[m
   </PropertyGroup>[m
 [m
   <ItemGroup>[m
[32m+[m[32m    <PackageReference Include="HappyTravel.EdoContracts" Version="1.0.23" />[m
     <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.0.0" />[m
   </ItemGroup>[m
 [m
[1mdiff --git a/Hiroshima.Common/Models/Accommodation/FeatureInfo.cs b/Hiroshima.Common/Models/Accommodation/FeatureInfo.cs[m
[1mindex c0dcd0e..1896e95 100644[m
[1m--- a/Hiroshima.Common/Models/Accommodation/FeatureInfo.cs[m
[1m+++ b/Hiroshima.Common/Models/Accommodation/FeatureInfo.cs[m
[36m@@ -1,10 +1,15 @@[m
[31m-ï»¿using Hiroshima.Common.Models.Enums;[m
[32m+[m[32mï»¿using HappyTravel.EdoContracts.Accommodations.Enums;[m
[32m+[m[32musing HappyTravel.EdoContracts.General.Enums;[m
[32m+[m[32musing Hiroshima.Common.Models.Enums;[m
 [m
 namespace Hiroshima.Common.Models.Accommodation[m
 {[m
     public class FeatureInfo[m
     {[m
[31m-        public FeatureTypes Type { get; set; }[m
[31m-        public bool IsValueRequired { get; set; }[m
[32m+[m[32m        public bool IsCommentRequired { get; set; }[m
[32m+[m
[32m+[m[32m        public string Name { get; set; }[m
[32m+[m
[32m+[m[32m        public FieldTypes Type { get; set; }[m
     }[m
 }[m
[1mdiff --git a/Hiroshima.Common/Models/Accommodation/TextualDescription.cs b/Hiroshima.Common/Models/Accommodation/TextualDescription.cs[m
[1mindex eb56d62..d69ae66 100644[m
[1m--- a/Hiroshima.Common/Models/Accommodation/TextualDescription.cs[m
[1m+++ b/Hiroshima.Common/Models/Accommodation/TextualDescription.cs[m
[36m@@ -1,4 +1,5 @@[m
[31m-ï»¿using Hiroshima.Common.Models.Enums;[m
[32m+[m[32mï»¿using HappyTravel.EdoContracts.Accommodations.Enums;[m
[32m+[m[32musing Hiroshima.Common.Models.Enums;[m
 [m
 namespace Hiroshima.Common.Models.Accommodation[m
 {[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/AccommodationRating.cs b/Hiroshima.Common/Models/Enums/AccommodationRating.cs[m
[1mdeleted file mode 100644[m
[1mindex cac953e..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/AccommodationRating.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Text;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    public enum AccommodationRating[m
[31m-    {[m
[31m-        Unknown = 1,[m
[31m-        NotRated = 2,[m
[31m-        OneStar = 4,[m
[31m-        TwoStars = 8,[m
[31m-        ThreeStars = 16,[m
[31m-        FourStars = 32,[m
[31m-        FiveStars = 64[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/BookingStatusCodes.cs b/Hiroshima.Common/Models/Enums/BookingStatusCodes.cs[m
[1mdeleted file mode 100644[m
[1mindex 5cea5aa..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/BookingStatusCodes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Converters;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    [JsonConverter(typeof(StringEnumConverter))][m
[31m-    public enum BookingStatusCodes[m
[31m-    {[m
[31m-        InternalProcessing = 0,[m
[31m-        WaitingForResponse = 1,[m
[31m-        Pending = 2,[m
[31m-        Confirmed = 3,[m
[31m-        Cancelled = 4,[m
[31m-        Rejected = 5,[m
[31m-        Invalid = 6[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/DirectionTypes.cs b/Hiroshima.Common/Models/Enums/DirectionTypes.cs[m
[1mdeleted file mode 100644[m
[1mindex cd00211..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/DirectionTypes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Converters;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    [JsonConverter(typeof(StringEnumConverter))][m
[31m-    public enum DirectionTypes[m
[31m-    {[m
[31m-        PointOfInterest = 0,[m
[31m-        Airport = 1,[m
[31m-        Bus = 2,[m
[31m-        Center = 3,[m
[31m-        Fair = 4,[m
[31m-        Metro = 5,[m
[31m-        Station = 6[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/FeatureTypes.cs b/Hiroshima.Common/Models/Enums/FeatureTypes.cs[m
[1mdeleted file mode 100644[m
[1mindex 1eb952f..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/FeatureTypes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,26 +0,0 @@[m
[31m-ï»¿using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Converters;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    [JsonConverter(typeof(StringEnumConverter))][m
[31m-    public enum FeatureTypes[m
[31m-    {[m
[31m-        None,[m
[31m-        Honeymooners,[m
[31m-        AdjoiningRooms,[m
[31m-        CommunicatingRooms,[m
[31m-        HighestFloorRoom,[m
[31m-        LowerFloorRoom,[m
[31m-        EarlyCheckIn,[m
[31m-        LateArrival,[m
[31m-        KingSizeBed,[m
[31m-        QueenSizeBed,[m
[31m-        DoubleBedForSoleUse,[m
[31m-        NoSmokingRoom,[m
[31m-        AirConditioner,[m
[31m-        ChampagneBottle,[m
[31m-        FruitBasket,[m
[31m-        WineBottle[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/LocationDescriptionCodes.cs b/Hiroshima.Common/Models/Enums/LocationDescriptionCodes.cs[m
[1mdeleted file mode 100644[m
[1mindex 9fde9f6..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/LocationDescriptionCodes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,27 +0,0 @@[m
[31m-ï»¿using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Converters;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    [JsonConverter(typeof(StringEnumConverter))][m
[31m-    public enum LocationDescriptionCodes[m
[31m-    {[m
[31m-        Unspecified = 0,[m
[31m-        CityCenter = 1,[m
[31m-        Airport = 2,[m
[31m-        RailwayStation = 3,[m
[31m-        Port = 4,[m
[31m-        SeaOrBeach = 5,[m
[31m-        OpenCountry = 6,[m
[31m-        Mountains = 7,[m
[31m-        Peripherals = 8,[m
[31m-        CloseToCityCentre = 9,[m
[31m-        City = 10,[m
[31m-        Island = 11,[m
[31m-        Ranch = 12,[m
[31m-        Boutique = 13,[m
[31m-        WaterFront = 14,[m
[31m-        OceanFront = 15,[m
[31m-        Desert = 16,[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/PropertyTypes.cs b/Hiroshima.Common/Models/Enums/PropertyTypes.cs[m
[1mdeleted file mode 100644[m
[1mindex 19feb60..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/PropertyTypes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Converters;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    [JsonConverter(typeof(StringEnumConverter))][m
[31m-    [Flags][m
[31m-    public enum PropertyTypes[m
[31m-    {[m
[31m-        Any = 0,[m
[31m-        Hotels = 1,[m
[31m-        Apartments = 2[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/RoomTypes.cs b/Hiroshima.Common/Models/Enums/RoomTypes.cs[m
[1mdeleted file mode 100644[m
[1mindex 5ed71d0..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/RoomTypes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-ï»¿using System.Text.Json.Serialization;[m
[31m-using Newtonsoft.Json.Converters;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    [JsonConverter(typeof(StringEnumConverter))][m
[31m-    public enum RoomTypes[m
[31m-    {[m
[31m-        NotSpecified = 0,[m
[31m-        Single = 1,[m
[31m-        TwinOrSingle = 2,[m
[31m-        Twin = 3,[m
[31m-        Double = 4,[m
[31m-        Triple = 5,[m
[31m-        Quadruple = 6,[m
[31m-        /// <summary>[m
[31m-        /// Family Room (2 adult + 2 extra bed)[m
[31m-        /// </summary>[m
[31m-        Family = 7[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.Common/Models/Enums/TextualDescriptionTypes.cs b/Hiroshima.Common/Models/Enums/TextualDescriptionTypes.cs[m
[1mdeleted file mode 100644[m
[1mindex e7c7538..0000000[m
[1m--- a/Hiroshima.Common/Models/Enums/TextualDescriptionTypes.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-ï»¿using Newtonsoft.Json;[m
[31m-using Newtonsoft.Json.Converters;[m
[31m-[m
[31m-namespace Hiroshima.Common.Models.Enums[m
[31m-{[m
[31m-    [JsonConverter(typeof(StringEnumConverter))][m
[31m-    public enum TextualDescriptionTypes[m
[31m-    {[m
[31m-        Unspecified = 0,[m
[31m-        Exterior = 1,[m
[31m-        General = 2,[m
[31m-        Lobby = 3,[m
[31m-        Position = 4,[m
[31m-        Restaurant = 5,[m
[31m-        Room = 6[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.DbData/DirectContractsDbContext.cs b/Hiroshima.DbData/DirectContractsDbContext.cs[m
[1mindex b4f5d8c..940d77b 100644[m
[1m--- a/Hiroshima.DbData/DirectContractsDbContext.cs[m
[1m+++ b/Hiroshima.DbData/DirectContractsDbContext.cs[m
[36m@@ -41,6 +41,7 @@[m [mnamespace Hiroshima.DbData[m
             AddBookings(modelBuilder);[m
             AddStopSaleDate(modelBuilder);[m
             AddPermittedOccupancies(modelBuilder);[m
[32m+[m[32m            AddPromotionalOffers(modelBuilder);[m
         }[m
 [m
 [m
[36m@@ -237,17 +238,36 @@[m [mnamespace Hiroshima.DbData[m
                 e.Property(b => b.Id).HasDefaultValueSql("nextval('\"PermittedOccupancyIdSeq\"')").IsRequired();[m
                 e.Property(p => p.AdultsNumber).HasDefaultValue(0);[m
                 e.Property(p => p.ChildrenNumber).HasDefaultValue(0);[m
[31m-                e.HasOne(p => p.Room).WithMany(a => a.PermittedOccupancies)[m
[32m+[m[32m                e.HasOne(p => p.Room).WithMany(r => r.PermittedOccupancies)[m
                     .HasForeignKey(p => p.RoomId);[m
             });[m
         }[m
 [m
 [m
[32m+[m[32m        private void AddPromotionalOffers(ModelBuilder modelBuilder)[m
[32m+[m[32m        {[m
[32m+[m[32m            modelBuilder.HasSequence<int>("PromotionalOfferIdSeq").StartsAt(1).IncrementsBy(1);[m
[32m+[m[32m            modelBuilder.Entity<PromotionalOffer>(e =>[m
[32m+[m[32m            {[m
[32m+[m[32m                e.ToTable("PromotionalOffers");[m
[32m+[m[32m                e.HasKey(p => p.Id);[m
[32m+[m[32m                e.Property(p => p.DiscountPct).IsRequired();[m
[32m+[m[32m                e.Property(p => p.BookBy).IsRequired();[m
[32m+[m[32m                e.Property(p => p.ValidFrom).IsRequired();[m
[32m+[m[32m                e.Property(p => p.ValidTo).IsRequired();[m
[32m+[m[32m                e.Property(p => p.BookingCode);[m
[32m+[m[32m                e.Property(p => p.Details).HasColumnType("jsonb");[m
[32m+[m[32m                e.HasOne(p => p.Room).WithMany(r => r.PromotionalOffers)[m
[32m+[m[32m                    .HasForeignKey(p => p.RoomId);[m
[32m+[m[32m            });[m
[32m+[m[32m        }[m
[32m+[m
         public virtual DbSet<Location.Locality> Localities { get; set; }[m
         public virtual DbSet<Location.Country> Countries { get; set; }[m
         public virtual DbSet<Location.Region> Regions { get; set; }[m
         public virtual DbSet<Location.Location> Locations { get; set; }[m
         public virtual DbSet<ContractRate> Rates { get; set; }[m
[32m+[m[32m        public virtual DbSet<PromotionalOffer> PromotionalOffers { get; set; }[m
         public virtual DbSet<Accommodation> Accommodations { get; set; }[m
         public virtual DbSet<Booking> Bookings { get; set; }[m
         public virtual DbSet<Season> Seasons { get; set; }[m
[1mdiff --git a/Hiroshima.DbData/Hiroshima.DbData.csproj b/Hiroshima.DbData/Hiroshima.DbData.csproj[m
[1mindex cf90af8..138137c 100644[m
[1m--- a/Hiroshima.DbData/Hiroshima.DbData.csproj[m
[1m+++ b/Hiroshima.DbData/Hiroshima.DbData.csproj[m
[36m@@ -5,7 +5,7 @@[m
   </PropertyGroup>[m
 [m
   <ItemGroup>[m
[31m-    <PackageReference Include="HappyTravel.EdoContracts" Version="1.0.18" />[m
[32m+[m[32m    <PackageReference Include="HappyTravel.EdoContracts" Version="1.0.23" />[m
     <PackageReference Include="HappyTravel.VaultClient" Version="1.0.3" />[m
     <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.0.0" />[m
     <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.0.0">[m
[1mdiff --git a/Hiroshima.DbData/Migrations/20191023003436_Init.Designer.cs b/Hiroshima.DbData/Migrations/20191023003436_Init.Designer.cs[m
[1mdeleted file mode 100644[m
[1mindex 333c547..0000000[m
[1m--- a/Hiroshima.DbData/Migrations/20191023003436_Init.Designer.cs[m
[1m+++ /dev/null[m
[36m@@ -1,446 +0,0 @@[m
[31m-ï»¿// <auto-generated />[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using Hiroshima.Common.Models;[m
[31m-using Hiroshima.Common.Models.Accommodation;[m
[31m-using Hiroshima.DbData;[m
[31m-using Hiroshima.DbData.Models.Accommodation;[m
[31m-using Microsoft.EntityFrameworkCore;[m
[31m-using Microsoft.EntityFrameworkCore.Infrastructure;[m
[31m-using Microsoft.EntityFrameworkCore.Migrations;[m
[31m-using Microsoft.EntityFrameworkCore.Storage.ValueConversion;[m
[31m-using NetTopologySuite.Geometries;[m
[31m-using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;[m
[31m-[m
[31m-namespace Hiroshima.DbData.Migrations[m
[31m-{[m
[31m-    [DbContext(typeof(DirectContractsDbContext))][m
[31m-    [Migration("20191023003436_Init")][m
[31m-    partial class Init[m
[31m-    {[m
[31m-        protected override void BuildTargetModel(ModelBuilder modelBuilder)[m
[31m-        {[m
[31m-#pragma warning disable 612, 618[m
[31m-            modelBuilder[m
[31m-                .HasAnnotation("Npgsql:PostgresExtension:postgis", ",,")[m
[31m-                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")[m
[31m-                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)[m
[31m-                .HasAnnotation("ProductVersion", "3.0.0")[m
[31m-                .HasAnnotation("Relational:MaxIdentifierLength", 63)[m
[31m-                .HasAnnotation("Relational:Sequence:.AccommodationIdSeq", "'AccommodationIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.BookingIdSeq", "'BookingIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.LocalityIdSeq", "'LocalityIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.LocationIdSeq", "'LocationIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.PermittedOccupancyIdSeq", "'PermittedOccupancyIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.RateIdSeq", "'RateIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.RoomsIdSeq", "'RoomsIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.SeasonIdSeq", "'SeasonIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[31m-                .HasAnnotation("Relational:Sequence:.StopSaleDateIdSeq", "'StopSaleDateIdSeq', '', '1', '1', '', '', 'Int32', 'False'");[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Accommodation.Accommodation", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"AccommodationIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<Dictionary<string, MultiLanguage<string>>>("AdditionalInfo")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<List<MultiLanguage<string>>>("Amenities")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<Contacts>("Contacts")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<List<FeatureInfo>>("Features")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<MultiLanguage<string>>("Name")[m
[31m-                        .IsRequired()[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<Picture>("Picture")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<int>("PropertyType")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<int>("Rating")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<Schedule>("Schedule")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<TextualDescription>("TextualDescription")[m
[31m-                        .IsRequired()[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.ToTable("Accommodations");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Booking.Booking", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"BookingIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<DateTime>("BookedAt")[m
[31m-                        .HasColumnType("timestamp without time zone");[m
[31m-[m
[31m-                    b.Property<DateTime>("CheckInAt")[m
[31m-                        .HasColumnType("timestamp without time zone");[m
[31m-[m
[31m-                    b.Property<DateTime>("CheckOutAt")[m
[31m-                        .HasColumnType("timestamp without time zone");[m
[31m-[m
[31m-                    b.Property<int>("ContractRateId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<DateTime>("CreatedAt")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("timestamp without time zone")[m
[31m-                        .HasDefaultValueSql("NOW()");[m
[31m-[m
[31m-                    b.Property<string>("LeadPassengerName")[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<string>("Nationality")[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<string>("Residency")[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<int>("StatusCode")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("ContractRateId");[m
[31m-[m
[31m-                    b.ToTable("Booking");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Country", b =>[m
[31m-                {[m
[31m-                    b.Property<string>("Code")[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<MultiLanguage<string>>("Name")[m
[31m-                        .IsRequired()[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<int>("RegionId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.HasKey("Code");[m
[31m-[m
[31m-                    b.HasIndex("RegionId");[m
[31m-[m
[31m-                    b.ToTable("Countries");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Locality", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"LocalityIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<string>("CountryCode")[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<MultiLanguage<string>>("Name")[m
[31m-                        .IsRequired()[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("CountryCode");[m
[31m-[m
[31m-                    b.ToTable("Localities");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Location", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"LocationIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<int>("AccommodationId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<MultiLanguage<string>>("Address")[m
[31m-                        .IsRequired()[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<Point>("Coordinates")[m
[31m-                        .IsRequired()[m
[31m-                        .HasColumnType("geometry (point)");[m
[31m-[m
[31m-                    b.Property<int>("LocalityId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("AccommodationId")[m
[31m-                        .IsUnique();[m
[31m-[m
[31m-                    b.HasIndex("LocalityId");[m
[31m-[m
[31m-                    b.ToTable("Locations");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Region", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);[m
[31m-[m
[31m-                    b.Property<MultiLanguage<string>>("Name")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.ToTable("Regions");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rates.ContractRate", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"RateIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<string>("BoardBasisCode")[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<string>("CurrencyCode")[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<decimal>("ExtraPersonPrice")[m
[31m-                        .HasColumnType("numeric");[m
[31m-[m
[31m-                    b.Property<int>("ReleaseDays")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<int>("RoomId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<int>("SeasonId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<decimal>("SeasonPrice")[m
[31m-                        .HasColumnType("numeric");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("RoomId");[m
[31m-[m
[31m-                    b.HasIndex("SeasonId");[m
[31m-[m
[31m-                    b.ToTable("ContractRates");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.PermittedOccupancy", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"PermittedOccupancyIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<int>("AdultsNumber")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValue(0);[m
[31m-[m
[31m-                    b.Property<int>("ChildrenNumber")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValue(0);[m
[31m-[m
[31m-                    b.Property<int>("RoomId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("RoomId");[m
[31m-[m
[31m-                    b.ToTable("PermittedOccupancies");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Room", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"RoomsIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<int>("AccommodationId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<List<MultiLanguage<string>>>("Amenities")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<MultiLanguage<string>>("Description")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.Property<MultiLanguage<string>>("Name")[m
[31m-                        .HasColumnType("jsonb");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("AccommodationId");[m
[31m-[m
[31m-                    b.ToTable("Rooms");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Season", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"SeasonIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<int>("AccommodationId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<DateTime>("EndDate")[m
[31m-                        .HasColumnType("timestamp without time zone");[m
[31m-[m
[31m-                    b.Property<string>("Name")[m
[31m-                        .IsRequired()[m
[31m-                        .HasColumnType("text");[m
[31m-[m
[31m-                    b.Property<DateTime>("StartDate")[m
[31m-                        .HasColumnType("timestamp without time zone");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("AccommodationId");[m
[31m-[m
[31m-                    b.ToTable("Seasons");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.StopSaleDate", b =>[m
[31m-                {[m
[31m-                    b.Property<int>("Id")[m
[31m-                        .ValueGeneratedOnAdd()[m
[31m-                        .HasColumnType("integer")[m
[31m-                        .HasDefaultValueSql("nextval('\"StopSaleDateIdSeq\"')");[m
[31m-[m
[31m-                    b.Property<DateTime>("EndDate")[m
[31m-                        .HasColumnType("timestamp without time zone");[m
[31m-[m
[31m-                    b.Property<int>("RoomId")[m
[31m-                        .HasColumnType("integer");[m
[31m-[m
[31m-                    b.Property<DateTime>("StartDate")[m
[31m-                        .HasColumnType("timestamp without time zone");[m
[31m-[m
[31m-                    b.HasKey("Id");[m
[31m-[m
[31m-                    b.HasIndex("RoomId");[m
[31m-[m
[31m-                    b.ToTable("StopSaleDates");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Booking.Booking", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Rates.ContractRate", "ContractRate")[m
[31m-                        .WithMany("Bookings")[m
[31m-                        .HasForeignKey("ContractRateId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Country", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Location.Region", "Region")[m
[31m-                        .WithMany("Countries")[m
[31m-                        .HasForeignKey("RegionId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Locality", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Location.Country", "Country")[m
[31m-                        .WithMany("Localities")[m
[31m-                        .HasForeignKey("CountryCode");[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Location", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Accommodation.Accommodation", "Accommodation")[m
[31m-                        .WithOne("Location")[m
[31m-                        .HasForeignKey("Hiroshima.DbData.Models.Location.Location", "AccommodationId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Location.Locality", "Locality")[m
[31m-                        .WithMany("Locations")[m
[31m-                        .HasForeignKey("LocalityId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rates.ContractRate", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")[m
[31m-                        .WithMany("ContractRates")[m
[31m-                        .HasForeignKey("RoomId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Rooms.Season", "Season")[m
[31m-                        .WithMany("ContractRates")[m
[31m-                        .HasForeignKey("SeasonId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.PermittedOccupancy", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")[m
[31m-                        .WithMany("PermittedOccupancies")[m
[31m-                        .HasForeignKey("RoomId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Room", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Accommodation.Accommodation", "Accommodation")[m
[31m-                        .WithMany("Rooms")[m
[31m-                        .HasForeignKey("AccommodationId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Season", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Accommodation.Accommodation", "Accommodation")[m
[31m-                        .WithMany("Seasons")[m
[31m-                        .HasForeignKey("AccommodationId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-[m
[31m-            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.StopSaleDate", b =>[m
[31m-                {[m
[31m-                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")[m
[31m-                        .WithMany("StopSaleDates")[m
[31m-                        .HasForeignKey("RoomId")[m
[31m-                        .OnDelete(DeleteBehavior.Cascade)[m
[31m-                        .IsRequired();[m
[31m-                });[m
[31m-#pragma warning restore 612, 618[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.DbData/Migrations/20191023003436_Init.cs b/Hiroshima.DbData/Migrations/20191023003436_Init.cs[m
[1mdeleted file mode 100644[m
[1mindex f27c123..0000000[m
[1m--- a/Hiroshima.DbData/Migrations/20191023003436_Init.cs[m
[1m+++ /dev/null[m
[36m@@ -1,416 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using Hiroshima.Common.Models;[m
[31m-using Hiroshima.Common.Models.Accommodation;[m
[31m-using Hiroshima.DbData.Models.Accommodation;[m
[31m-using Microsoft.EntityFrameworkCore.Migrations;[m
[31m-using NetTopologySuite.Geometries;[m
[31m-using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;[m
[31m-[m
[31m-namespace Hiroshima.DbData.Migrations[m
[31m-{[m
[31m-    public partial class Init : Migration[m
[31m-    {[m
[31m-        protected override void Up(MigrationBuilder migrationBuilder)[m
[31m-        {[m
[31m-            migrationBuilder.AlterDatabase()[m
[31m-                .Annotation("Npgsql:PostgresExtension:postgis", ",,")[m
[31m-                .Annotation("Npgsql:PostgresExtension:uuid-ossp", ",,");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "AccommodationIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "BookingIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "LocalityIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "LocationIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "PermittedOccupancyIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "RateIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "RoomsIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "SeasonIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateSequence<int>([m
[31m-                name: "StopSaleDateIdSeq");[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Accommodations",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"AccommodationIdSeq\"')"),[m
[31m-                    Name = table.Column<MultiLanguage<string>>(type: "jsonb", nullable: false),[m
[31m-                    Contacts = table.Column<Contacts>(type: "jsonb", nullable: true),[m
[31m-                    Picture = table.Column<Picture>(type: "jsonb", nullable: true),[m
[31m-                    Rating = table.Column<int>(nullable: false),[m
[31m-                    TextualDescription = table.Column<TextualDescription>(type: "jsonb", nullable: false),[m
[31m-                    Schedule = table.Column<Schedule>(type: "jsonb", nullable: true),[m
[31m-                    PropertyType = table.Column<int>(nullable: false),[m
[31m-                    Features = table.Column<List<FeatureInfo>>(type: "jsonb", nullable: true),[m
[31m-                    Amenities = table.Column<List<MultiLanguage<string>>>(type: "jsonb", nullable: true),[m
[31m-                    AdditionalInfo = table.Column<Dictionary<string, MultiLanguage<string>>>(type: "jsonb", nullable: true)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Accommodations", x => x.Id);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Regions",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false)[m
[31m-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),[m
[31m-                    Name = table.Column<MultiLanguage<string>>(type: "jsonb", nullable: true)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Regions", x => x.Id);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Rooms",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"RoomsIdSeq\"')"),[m
[31m-                    AccommodationId = table.Column<int>(nullable: false),[m
[31m-                    Name = table.Column<MultiLanguage<string>>(type: "jsonb", nullable: true),[m
[31m-                    Description = table.Column<MultiLanguage<string>>(type: "jsonb", nullable: true),[m
[31m-                    Amenities = table.Column<List<MultiLanguage<string>>>(type: "jsonb", nullable: true)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Rooms", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_Rooms_Accommodations_AccommodationId",[m
[31m-                        column: x => x.AccommodationId,[m
[31m-                        principalTable: "Accommodations",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Seasons",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"SeasonIdSeq\"')"),[m
[31m-                    Name = table.Column<string>(nullable: false),[m
[31m-                    StartDate = table.Column<DateTime>(nullable: false),[m
[31m-                    EndDate = table.Column<DateTime>(nullable: false),[m
[31m-                    AccommodationId = table.Column<int>(nullable: false)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Seasons", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_Seasons_Accommodations_AccommodationId",[m
[31m-                        column: x => x.AccommodationId,[m
[31m-                        principalTable: "Accommodations",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Countries",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Code = table.Column<string>(nullable: false),[m
[31m-                    Name = table.Column<MultiLanguage<string>>(type: "jsonb", nullable: false),[m
[31m-                    RegionId = table.Column<int>(nullable: false)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Countries", x => x.Code);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_Countries_Regions_RegionId",[m
[31m-                        column: x => x.RegionId,[m
[31m-                        principalTable: "Regions",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "PermittedOccupancies",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"PermittedOccupancyIdSeq\"')"),[m
[31m-                    RoomId = table.Column<int>(nullable: false),[m
[31m-                    AdultsNumber = table.Column<int>(nullable: false, defaultValue: 0),[m
[31m-                    ChildrenNumber = table.Column<int>(nullable: false, defaultValue: 0)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_PermittedOccupancies", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_PermittedOccupancies_Rooms_RoomId",[m
[31m-                        column: x => x.RoomId,[m
[31m-                        principalTable: "Rooms",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "StopSaleDates",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"StopSaleDateIdSeq\"')"),[m
[31m-                    RoomId = table.Column<int>(nullable: false),[m
[31m-                    StartDate = table.Column<DateTime>(nullable: false),[m
[31m-                    EndDate = table.Column<DateTime>(nullable: false)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_StopSaleDates", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_StopSaleDates_Rooms_RoomId",[m
[31m-                        column: x => x.RoomId,[m
[31m-                        principalTable: "Rooms",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "ContractRates",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"RateIdSeq\"')"),[m
[31m-                    RoomId = table.Column<int>(nullable: false),[m
[31m-                    BoardBasisCode = table.Column<string>(nullable: true),[m
[31m-                    CurrencyCode = table.Column<string>(nullable: true),[m
[31m-                    ReleaseDays = table.Column<int>(nullable: false),[m
[31m-                    SeasonPrice = table.Column<decimal>(type: "numeric", nullable: false),[m
[31m-                    ExtraPersonPrice = table.Column<decimal>(type: "numeric", nullable: false),[m
[31m-                    SeasonId = table.Column<int>(nullable: false)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_ContractRates", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_ContractRates_Rooms_RoomId",[m
[31m-                        column: x => x.RoomId,[m
[31m-                        principalTable: "Rooms",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_ContractRates_Seasons_SeasonId",[m
[31m-                        column: x => x.SeasonId,[m
[31m-                        principalTable: "Seasons",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Localities",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"LocalityIdSeq\"')"),[m
[31m-                    Name = table.Column<MultiLanguage<string>>(type: "jsonb", nullable: false),[m
[31m-                    CountryCode = table.Column<string>(nullable: true)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Localities", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_Localities_Countries_CountryCode",[m
[31m-                        column: x => x.CountryCode,[m
[31m-                        principalTable: "Countries",[m
[31m-                        principalColumn: "Code",[m
[31m-                        onDelete: ReferentialAction.Restrict);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Booking",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"BookingIdSeq\"')"),[m
[31m-                    StatusCode = table.Column<int>(nullable: false),[m
[31m-                    ContractRateId = table.Column<int>(nullable: false),[m
[31m-                    CreatedAt = table.Column<DateTime>(nullable: false, defaultValueSql: "NOW()"),[m
[31m-                    BookedAt = table.Column<DateTime>(nullable: false),[m
[31m-                    CheckInAt = table.Column<DateTime>(nullable: false),[m
[31m-                    CheckOutAt = table.Column<DateTime>(nullable: false),[m
[31m-                    Nationality = table.Column<string>(nullable: true),[m
[31m-                    Residency = table.Column<string>(nullable: true),[m
[31m-                    LeadPassengerName = table.Column<string>(nullable: true)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Booking", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_Booking_ContractRates_ContractRateId",[m
[31m-                        column: x => x.ContractRateId,[m
[31m-                        principalTable: "ContractRates",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateTable([m
[31m-                name: "Locations",[m
[31m-                columns: table => new[m
[31m-                {[m
[31m-                    Id = table.Column<int>(nullable: false, defaultValueSql: "nextval('\"LocationIdSeq\"')"),[m
[31m-                    Coordinates = table.Column<Point>(type: "geometry (point)", nullable: false),[m
[31m-                    Address = table.Column<MultiLanguage<string>>(type: "jsonb", nullable: false),[m
[31m-                    LocalityId = table.Column<int>(nullable: false),[m
[31m-                    AccommodationId = table.Column<int>(nullable: false)[m
[31m-                },[m
[31m-                constraints: table =>[m
[31m-                {[m
[31m-                    table.PrimaryKey("PK_Locations", x => x.Id);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_Locations_Accommodations_AccommodationId",[m
[31m-                        column: x => x.AccommodationId,[m
[31m-                        principalTable: "Accommodations",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                    table.ForeignKey([m
[31m-                        name: "FK_Locations_Localities_LocalityId",[m
[31m-                        column: x => x.LocalityId,[m
[31m-                        principalTable: "Localities",[m
[31m-                        principalColumn: "Id",[m
[31m-                        onDelete: ReferentialAction.Cascade);[m
[31m-                });[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_Booking_ContractRateId",[m
[31m-                table: "Booking",[m
[31m-                column: "ContractRateId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_ContractRates_RoomId",[m
[31m-                table: "ContractRates",[m
[31m-                column: "RoomId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_ContractRates_SeasonId",[m
[31m-                table: "ContractRates",[m
[31m-                column: "SeasonId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_Countries_RegionId",[m
[31m-                table: "Countries",[m
[31m-                column: "RegionId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_Localities_CountryCode",[m
[31m-                table: "Localities",[m
[31m-                column: "CountryCode");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_Locations_AccommodationId",[m
[31m-                table: "Locations",[m
[31m-                column: "AccommodationId",[m
[31m-                unique: true);[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_Locations_LocalityId",[m
[31m-                table: "Locations",[m
[31m-                column: "LocalityId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_PermittedOccupancies_RoomId",[m
[31m-                table: "PermittedOccupancies",[m
[31m-                column: "RoomId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_Rooms_AccommodationId",[m
[31m-                table: "Rooms",[m
[31m-                column: "AccommodationId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_Seasons_AccommodationId",[m
[31m-                table: "Seasons",[m
[31m-                column: "AccommodationId");[m
[31m-[m
[31m-            migrationBuilder.CreateIndex([m
[31m-                name: "IX_StopSaleDates_RoomId",[m
[31m-                table: "StopSaleDates",[m
[31m-                column: "RoomId");[m
[31m-[m
[31m-            migrationBuilder.Sql(@"CREATE INDEX accommodations_name_eng_fts_idx ON ""Accommodations"" USING GIN (to_tsvector('english', ""Name""));");[m
[31m-            migrationBuilder.Sql(@"CREATE INDEX accommodations_name_smpl_fts_idx ON ""Accommodations"" USING GIN (to_tsvector('simple', ""Name""));");[m
[31m-            migrationBuilder.Sql(@"CREATE INDEX locations_address_eng_fts_idx ON ""Locations"" USING GIN (to_tsvector('english', ""Address""));");[m
[31m-            migrationBuilder.Sql(@"CREATE INDEX locations_address_smpl_fts_idx ON ""Locations"" USING GIN (to_tsvector('simple', ""Address""));");[m
[31m-[m
[31m-            InitData.AddStaticData(migrationBuilder);[m
[31m-        }[m
[31m-[m
[31m-        protected override void Down(MigrationBuilder migrationBuilder)[m
[31m-        {[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Booking");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Locations");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "PermittedOccupancies");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "StopSaleDates");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "ContractRates");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Localities");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Rooms");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Seasons");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Countries");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Accommodations");[m
[31m-[m
[31m-            migrationBuilder.DropTable([m
[31m-                name: "Regions");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "AccommodationIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "BookingIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "LocalityIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "LocationIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "PermittedOccupancyIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "RateIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "RoomsIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "SeasonIdSeq");[m
[31m-[m
[31m-            migrationBuilder.DropSequence([m
[31m-                name: "StopSaleDateIdSeq");[m
[31m-[m
[31m-            migrationBuilder.Sql(@"DROP accommodations_name_eng_fts_idx;");[m
[31m-            migrationBuilder.Sql(@"DROP accommodations_name_smpl_fts_idx;");[m
[31m-            migrationBuilder.Sql(@"DROP locations_address_eng_fts_idx;");[m
[31m-            migrationBuilder.Sql(@"DROP locations_address_smpl_fts_idx;");[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Hiroshima.DbData/Migrations/DirectContractsDbContextModelSnapshot.cs b/Hiroshima.DbData/Migrations/DirectContractsDbContextModelSnapshot.cs[m
[1mindex a0fbf82..356d8d5 100644[m
[1m--- a/Hiroshima.DbData/Migrations/DirectContractsDbContextModelSnapshot.cs[m
[1m+++ b/Hiroshima.DbData/Migrations/DirectContractsDbContextModelSnapshot.cs[m
[36m@@ -30,6 +30,7 @@[m [mnamespace Hiroshima.DbData.Migrations[m
                 .HasAnnotation("Relational:Sequence:.LocalityIdSeq", "'LocalityIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
                 .HasAnnotation("Relational:Sequence:.LocationIdSeq", "'LocationIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
                 .HasAnnotation("Relational:Sequence:.PermittedOccupancyIdSeq", "'PermittedOccupancyIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[32m+[m[32m                .HasAnnotation("Relational:Sequence:.PromotionalOfferIdSeq", "'PromotionalOfferIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
                 .HasAnnotation("Relational:Sequence:.RateIdSeq", "'RateIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
                 .HasAnnotation("Relational:Sequence:.RoomsIdSeq", "'RoomsIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
                 .HasAnnotation("Relational:Sequence:.SeasonIdSeq", "'SeasonIdSeq', '', '1', '1', '', '', 'Int32', 'False'")[m
[36m@@ -245,6 +246,41 @@[m [mnamespace Hiroshima.DbData.Migrations[m
                     b.ToTable("ContractRates");[m
                 });[m
 [m
[32m+[m[32m            modelBuilder.Entity("Hiroshima.DbData.Models.Rates.PromotionalOffer", b =>[m
[32m+[m[32m                {[m
[32m+[m[32m                    b.Property<int>("Id")[m
[32m+[m[32m                        .ValueGeneratedOnAdd()[m
[32m+[m[32m                        .HasColumnType("integer")[m
[32m+[m[32m                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);[m
[32m+[m
[32m+[m[32m                    b.Property<DateTime>("BookBy")[m
[32m+[m[32m                        .HasColumnType("timestamp without time zone");[m
[32m+[m
[32m+[m[32m                    b.Property<string>("BookingCode")[m
[32m+[m[32m                        .HasColumnType("text");[m
[32m+[m
[32m+[m[32m                    b.Property<MultiLanguage<string>>("Details")[m
[32m+[m[32m                        .HasColumnType("jsonb");[m
[32m+[m
[32m+[m[32m                    b.Property<int>("DiscountPct")[m
[32m+[m[32m                        .HasColumnType("integer");[m
[32m+[m
[32m+[m[32m                    b.Property<int>("RoomId")[m
[32m+[m[32m                        .HasColumnType("integer");[m
[32m+[m
[32m+[m[32m                    b.Property<DateTime>("ValidFrom")[m
[32m+[m[32m                        .HasColumnType("timestamp without time zone");[m
[32m+[m
[32m+[m[32m                    b.Property<DateTime>("ValidTo")[m
[32m+[m[32m                        .HasColumnType("timestamp without time zone");[m
[32m+[m
[32m+[m[32m                    b.HasKey("Id");[m
[32m+[m
[32m+[m[32m                    b.HasIndex("RoomId");[m
[32m+[m
[32m+[m[32m                    b.ToTable("PromotionalOffers");[m
[32m+[m[32m                });[m
[32m+[m
             modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.PermittedOccupancy", b =>[m
                 {[m
                     b.Property<int>("Id")[m
[36m@@ -403,6 +439,15 @@[m [mnamespace Hiroshima.DbData.Migrations[m
                         .IsRequired();[m
                 });[m
 [m
[32m+[m[32m            modelBuilder.Entity("Hiroshima.DbData.Models.Rates.PromotionalOffer", b =>[m
[32m+[m[32m                {[m
[32m+[m[32m                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")[m
[32m+[m[32m                        .WithMany("PromotionalOffers")[m
[32m+[m[32m                        .HasForeignKey("RoomId")[m
[32m+[m[32m                        .OnDelete(DeleteBehavior.Cascade)[m
[32m+[m[32m                        .IsRequired();[m
[32m+[m[32m                });[m
[32m+[m
             modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.PermittedOccupancy", b =>[m
                 {[m
                     b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")[m
[1mdiff --git a/Hiroshima.DbData/Models/Accommodation/Accommodation.cs b/Hiroshima.DbData/Models/Accommodation/Accommodation.cs[m
[1mindex e8d4f34..8d35559 100644[m
[1m--- a/Hiroshima.DbData/Models/Accommodation/Accommodation.cs[m
[1m+++ b/Hiroshima.DbData/Models/Accommodation/Accommodation.cs[m
[36m@@ -1,4 +1,5 @@[m
 ï»¿using System.Collections.Generic;[m
[32m+[m[32musing HappyTravel.EdoContracts.Accommodations.Enums;[m
 using Hiroshima.Common.Models;[m
 using Hiroshima.Common.Models.Accommodation;[m
 using Hiroshima.Common.Models.Enums;[m
[36m@@ -13,7 +14,7 @@[m [mnamespace Hiroshima.DbData.Models.Accommodation[m
         public MultiLanguage<string> Name { get; set; }[m
         public Contacts Contacts { get; set; }[m
         public Picture Picture { get; set; }[m
[31m-        public AccommodationRating Rating { get; set; }[m
[32m+[m[32m        public AccommodationRatings Rating { get; set; }[m
         public TextualDescription TextualDescription { get; set; }[m
         public Schedule Schedule { get; set; }[m
         public PropertyTypes PropertyType { get; set; }[m
[1mdiff --git a/Hiroshima.DbData/Models/Booking/Booking.cs b/Hiroshima.DbData/Models/Booking/Booking.cs[m
[1mindex 8ed792c..3bd00cb 100644[m
[1m--- a/Hiroshima.DbData/Models/Booking/Booking.cs[m
[1m+++ b/Hiroshima.DbData/Models/Booking/Booking.cs[m
[36m@@ -1,4 +1,5 @@[m
 ï»¿using System;[m
[32m+[m[32musing HappyTravel.EdoContracts.Accommodations.Enums;[m
 using Hiroshima.Common.Models;[m
 using Hiroshima.DbData.Models.Rates;[m
 using Hiroshima.Common.Models.Enums;[m
[1mdiff --git a/Hiroshima.DbData/Models/Rooms/Room.cs b/Hiroshima.DbData/Models/Rooms/Room.cs[m
[1mindex 031c5cc..d58a238 100644[m
[1m--- a/Hiroshima.DbData/Models/Rooms/Room.cs[m
[1m+++ b/Hiroshima.DbData/Models/Rooms/Room.cs[m
[36m@@ -15,5 +15,7 @@[m [mnamespace Hiroshima.DbData.Models.Rooms[m
         public ICollection<ContractRate> ContractRates { get; set; }[m
         public ICollection<StopSaleDate> StopSaleDates { get; set; }[m
         public ICollection<PermittedOccupancy> PermittedOccupancies{ get; set; }[m
[32m+[m[32m        public ICollection<PromotionalOffer> PromotionalOffers { get; set; }[m
[32m+[m
     }[m
 }[m
[1mdiff --git a/Hiroshima.DirectContracts/Models/FeatureInfo.cs b/Hiroshima.DirectContracts/Models/FeatureInfo.cs[m
[1mindex 908bdec..fe2de29 100644[m
[1m--- a/Hiroshima.DirectContracts/Models/FeatureInfo.cs[m
[1m+++ b/Hiroshima.DirectContracts/Models/FeatureInfo.cs[m
[36m@@ -1,11 +1,15 @@[m
[31m-ï»¿using Hiroshima.Common.Models.Enums;[m
[32m+[m[32mï»¿using HappyTravel.EdoContracts.Accommodations.Enums;[m
[32m+[m[32musing HappyTravel.EdoContracts.General.Enums;[m
 [m
 namespace Hiroshima.DirectContracts.Models[m
 {[m
     public class FeatureInfo[m
     {[m
[31m-        public FeatureTypes FeatureType { get; set; }[m
[31m-        public bool IsValueRequired { get; set; }[m
[32m+[m[32m        public bool IsCommentRequired { get; set; }[m
[32m+[m
[32m+[m[32m        public string Name { get; set; }[m
[32m+[m
[32m+[m[32m        public FieldTypes Type { get; set; }[m
     }[m
 [m
     [m
[1mdiff --git a/Hiroshima.DirectContracts/Models/Internal/RawAvailabilityData.cs b/Hiroshima.DirectContracts/Models/Internal/RawAvailabilityData.cs[m
[1mindex cd54ff2..01fce24 100644[m
[1m--- a/Hiroshima.DirectContracts/Models/Internal/RawAvailabilityData.cs[m
[1m+++ b/Hiroshima.DirectContracts/Models/Internal/RawAvailabilityData.cs[m
[36m@@ -9,13 +9,13 @@[m [mnamespace Hiroshima.DirectContracts.Models.RawAvailiability[m
 {[m
     public class RawAvailabilityData[m
     {[m
[31m-      public Location Location { get; set; }[m
[31m-      public Locality Locality { get; set; }[m
[31m-      public Country Country { get; set; }[m
[31m-      public Accommodation Accommodation { get; set; }[m
[31m-      public Room Room { get; set; }[m
[31m-      public Season Season { get; set; }[m
[31m-      public ContractRate ContractRate { get; set; }[m
[31m-      public PermittedOccupancy PermittedOccupancy { get; set; }[m
[32m+[m[32m        public Location Location { get; set; }[m
[32m+[m[32m        public Locality Locality { get; set; }[m
[32m+[m[32m        public Country Country { get; set; }[m
[32m+[m[32m        public Accommodation Accommodation { get; set; }[m
[32m+[m[32m        public Room Room { get; set; }[m
[32m+[m[32m        public Season Season { get; set; }[m
[32m+[m[32m        public ContractRate ContractRate { get; set; }[m
[32m+[m[32m        public PermittedOccupancy PermittedOccupancy { get; set; }[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContracts/Services/Availability/AvailabilityDbRequests.cs b/Hiroshima.DirectContracts/Services/Availability/AvailabilityDbRequests.cs[m
[1mindex f865e6f..7f006d3 100644[m
[1m--- a/Hiroshima.DirectContracts/Services/Availability/AvailabilityDbRequests.cs[m
[1m+++ b/Hiroshima.DirectContracts/Services/Availability/AvailabilityDbRequests.cs[m
[36m@@ -11,56 +11,52 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability[m
         {[m
             //Get blocked rooms ids[m
             var blockedRooms = (from blocked in dbContext.StopSaleDates[m
[31m-                                where blocked.StartDate <= checkOutDate && checkInDate <= blocked.EndDate[m
[31m-                                select blocked.RoomId).Distinct();[m
[31m-            [m
[31m-            [m
[32m+[m[32m                where blocked.StartDate <= checkOutDate && checkInDate <= blocked.EndDate[m
[32m+[m[32m                select blocked.RoomId).Distinct();[m
[32m+[m
             //Get available rooms, exclude blocked[m
             var availableRooms = (from room in dbContext.Rooms[m
[31m-                                  join stopSaleDate in dbContext.StopSaleDates[m
[31m-                                      on room.Id equals stopSaleDate.RoomId[m
[31m-                                  where !blockedRooms.Contains(room.Id)[m
[31m-                                  select room).Distinct();[m
[32m+[m[32m                join stopSaleDate in dbContext.StopSaleDates[m
[32m+[m[32m                    on room.Id equals stopSaleDate.RoomId[m
[32m+[m[32m                where !blockedRooms.Contains(room.Id)[m
[32m+[m[32m                select room).Distinct();[m
 [m
[31m-            [m
             //Get season rates[m
             var seasonsAndRates = from rate in dbContext.Rates[m
[31m-                                  join season in dbContext.Seasons[m
[31m-                                      on rate.SeasonId equals season.Id[m
[31m-                                  where !(season.EndDate < checkInDate ||[m
[31m-                                          checkOutDate < season.StartDate )[m
[31m-                                  select new[m
[31m-                                  {[m
[31m-                                      Rate = rate,[m
[31m-                                      Season = season[m
[31m-                                  };[m
[31m-            [m
[32m+[m[32m                join season in dbContext.Seasons[m
[32m+[m[32m                    on rate.SeasonId equals season.Id[m
[32m+[m[32m                where !(season.EndDate < checkInDate ||[m
[32m+[m[32m                    checkOutDate < season.StartDate)[m
[32m+[m[32m                select new[m
[32m+[m[32m                {[m
[32m+[m[32m                    Rate = rate,[m
[32m+[m[32m                    Season = season[m
[32m+[m[32m                };[m
 [m
             return from location in dbContext.Locations[m
[31m-                   join locality in dbContext.Localities[m
[31m-                       on location.LocalityId equals locality.Id[m
[31m-                   join country in dbContext.Countries[m
[31m-                       on locality.CountryCode equals country.Code[m
[31m-                   join accommodation in dbContext.Accommodations[m
[31m-                       on location.AccommodationId equals accommodation.Id[m
[31m-                   join room in availableRooms[m
[31m-                       on accommodation.Id equals room.AccommodationId[m
[31m-                   join permittedOccupancy in dbContext.PermittedOccupancies[m
[31m-                       on room.Id equals permittedOccupancy.RoomId[m
[31m-                   join seasonAndRate in seasonsAndRates[m
[31m-                       on room.Id equals seasonAndRate.Rate.RoomId[m
[31m-                   [m
[31m-                   select new RawAvailabilityData[m
[31m-                   {[m
[31m-                       Location = location,[m
[31m-                       Locality = locality,[m
[31m-                       Country = country,[m
[31m-                       Accommodation = accommodation,[m
[31m-                       Room = room,[m
[31m-                       Season = seasonAndRate.Season,[m
[31m-                       ContractRate = seasonAndRate.Rate,[m
[31m-                       PermittedOccupancy = permittedOccupancy[m
[31m-                   };[m
[32m+[m[32m                join locality in dbContext.Localities[m
[32m+[m[32m                    on location.LocalityId equals locality.Id[m
[32m+[m[32m                join country in dbContext.Countries[m
[32m+[m[32m                    on locality.CountryCode equals country.Code[m
[32m+[m[32m                join accommodation in dbContext.Accommodations[m
[32m+[m[32m                    on location.AccommodationId equals accommodation.Id[m
[32m+[m[32m                join room in availableRooms[m
[32m+[m[32m                    on accommodation.Id equals room.AccommodationId[m
[32m+[m[32m                join permittedOccupancy in dbContext.PermittedOccupancies[m
[32m+[m[32m                    on room.Id equals permittedOccupancy.RoomId[m
[32m+[m[32m                join seasonAndRate in seasonsAndRates[m
[32m+[m[32m                    on room.Id equals seasonAndRate.Rate.RoomId[m
[32m+[m[32m                select new RawAvailabilityData[m
[32m+[m[32m                {[m
[32m+[m[32m                    Location = location,[m
[32m+[m[32m                    Locality = locality,[m
[32m+[m[32m                    Country = country,[m
[32m+[m[32m                    Accommodation = accommodation,[m
[32m+[m[32m                    Room = room,[m
[32m+[m[32m                    Season = seasonAndRate.Season,[m
[32m+[m[32m                    ContractRate = seasonAndRate.Rate,[m
[32m+[m[32m                    PermittedOccupancy = permittedOccupancy[m
[32m+[m[32m                };[m
         }[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContracts/Services/Availability/AvailabilityDetailsBuilder.cs b/Hiroshima.DirectContracts/Services/Availability/AvailabilityDetailsBuilder.cs[m
[1mindex 8a3d596..e859998 100644[m
[1m--- a/Hiroshima.DirectContracts/Services/Availability/AvailabilityDetailsBuilder.cs[m
[1m+++ b/Hiroshima.DirectContracts/Services/Availability/AvailabilityDetailsBuilder.cs[m
[36m@@ -80,11 +80,11 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability[m
                 return EmptyAvailabilityDetails;[m
 [m
             var groupedData = from queryRow in rawAvailabilitiesData[m
[31m-                              group queryRow by queryRow.Accommodation.Id[m
[32m+[m[32m                group queryRow by queryRow.Accommodation.Id[m
                 into accommodations[m
[31m-                              from room in from accomItem in accommodations[m
[31m-                                           group accomItem by accomItem.Room.Id[m
[31m-                              group room by accommodations.Key;[m
[32m+[m[32m                from room in from accomItem in accommodations[m
[32m+[m[32m                    group accomItem by accomItem.Room.Id[m
[32m+[m[32m                group room by accommodations.Key;[m
 [m
             /* grouping result:[m
              * accommodation1-[m
[36m@@ -96,13 +96,11 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability[m
             var slimAvailabilities = new List<SlimAvailabilityResult>();[m
 [m
             foreach (var rawAvailability in groupedData)[m
[31m-            {[m
                 // rawAvailability it's a group with rooms for the current accommodation[m
                 slimAvailabilities.Add(new SlimAvailabilityResult([m
[31m-                     //get a first group than get the first item from the group[m
[31m-                     RawSlimAccommodationDetailsHelper.CreateSlimAccommodationDetails(rawAvailability.First().First(), _language),[m
[31m-                     RawAgreementHelper.CreateAgreements(rawAvailability, _checkInDate, _checkOutDate, _language)));[m
[31m-            }[m
[32m+[m[32m                    //get a first group than get the first item from the group[m
[32m+[m[32m                    RawSlimAccommodationDetailsHelper.CreateSlimAccommodationDetails(rawAvailability.First().First(), _language),[m
[32m+[m[32m                    RawAgreementHelper.CreateAgreements(rawAvailability, _checkInDate, _checkOutDate, _language)));[m
 [m
             return new AvailabilityDetails(default,[m
                 CalculateCountOfNights(_checkInDate, _checkOutDate),[m
[36m@@ -112,15 +110,16 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability[m
         }[m
 [m
 [m
[31m-        public AvailabilityDetails EmptyAvailabilityDetails => new AvailabilityDetails(default,[m
[31m-            CalculateCountOfNights(_checkInDate, _checkOutDate),[m
[31m-            _checkInDate,[m
[31m-            _checkOutDate,[m
[31m-            EmptySlimAvailabilityResults);[m
[32m+[m[32m        public AvailabilityDetails EmptyAvailabilityDetails[m
[32m+[m[32m            => new AvailabilityDetails(default,[m
[32m+[m[32m                CalculateCountOfNights(_checkInDate, _checkOutDate),[m
[32m+[m[32m                _checkInDate,[m
[32m+[m[32m                _checkOutDate,[m
[32m+[m[32m                EmptySlimAvailabilityResults);[m
 [m
 [m
[31m-        private static int CalculateCountOfNights(DateTime checkInDate, DateTime checkOutDate) =>[m
[31m-            checkInDate.Date <= checkOutDate.Date[m
[32m+[m[32m        private static int CalculateCountOfNights(DateTime checkInDate, DateTime checkOutDate)[m
[32m+[m[32m            => checkInDate.Date <= checkOutDate.Date[m
                 ? Convert.ToInt32(checkOutDate.Date.Subtract(checkInDate.Date).TotalDays)[m
                 : 0;[m
 [m
[36m@@ -132,5 +131,4 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability[m
         private IQueryable<RawAvailabilityData> _rawAvailabilities = Enumerable.Empty<RawAvailabilityData>().AsQueryable();[m
         private static readonly List<SlimAvailabilityResult> EmptySlimAvailabilityResults = new List<SlimAvailabilityResult>(0);[m
     }[m
[31m-[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContracts/Services/Availability/Helpers/RawSlimAccommodationDetailsHelper.cs b/Hiroshima.DirectContracts/Services/Availability/Helpers/RawSlimAccommodationDetailsHelper.cs[m
[1mindex 5d05709..084324c 100644[m
[1m--- a/Hiroshima.DirectContracts/Services/Availability/Helpers/RawSlimAccommodationDetailsHelper.cs[m
[1m+++ b/Hiroshima.DirectContracts/Services/Availability/Helpers/RawSlimAccommodationDetailsHelper.cs[m
[36m@@ -2,12 +2,13 @@[m
 using System.Linq;[m
 using HappyTravel.EdoContracts.Accommodations.Enums;[m
 using HappyTravel.EdoContracts.Accommodations.Internals;[m
[32m+[m[32musing HappyTravel.EdoContracts.General.Enums;[m
 using HappyTravel.Geography;[m
 using Hiroshima.Common.Models.Enums;[m
 using Hiroshima.Common.Utils.Languages;[m
 using Hiroshima.DirectContracts.Models.RawAvailiability;[m
 using FeatureInfo = HappyTravel.EdoContracts.Accommodations.Internals.FeatureInfo;[m
[31m-using FeatureTypes = HappyTravel.EdoContracts.Accommodations.Enums.FeatureTypes;[m
[32m+[m[32musing FeatureTypes = HappyTravel.EdoContracts.Accommodations.Enums;[m
 using Picture = HappyTravel.EdoContracts.Accommodations.Internals.Picture;[m
 using PropertyTypes = HappyTravel.EdoContracts.Accommodations.Enums.PropertyTypes;[m
 using TextualDescription = HappyTravel.EdoContracts.Accommodations.Internals.TextualDescription;[m
[36m@@ -116,7 +117,7 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability.Helpers[m
 [m
         private static List<FeatureInfo> GetFeatureInfo(RawAvailabilityData rawAvailabilityData)[m
         {[m
[31m-            return rawAvailabilityData.Accommodation.Features?.Select(i => new FeatureInfo((FeatureTypes)i.Type, i.IsValueRequired)).ToList();[m
[32m+[m[32m            return rawAvailabilityData.Accommodation.Features?.Select(i => new FeatureInfo(string.Empty,FieldTypes.Boolean)).ToList();[m
         }[m
 [m
 [m
[1mdiff --git a/Hiroshima.DirectContracts/Services/Availability/InDbExecutionPredicates.cs b/Hiroshima.DirectContracts/Services/Availability/InDbExecutionPredicates.cs[m
[1mindex 2c82325..b823e4a 100644[m
[1m--- a/Hiroshima.DirectContracts/Services/Availability/InDbExecutionPredicates.cs[m
[1m+++ b/Hiroshima.DirectContracts/Services/Availability/InDbExecutionPredicates.cs[m
[36m@@ -8,7 +8,7 @@[m [musing NetTopologySuite.Geometries;[m
 [m
 namespace Hiroshima.DirectContracts.Services.Availability[m
 {[m
[31m-    static class InDbExecutionPredicates[m
[32m+[m[32m    internal static class InDbExecutionPredicates[m
     {[m
         public static Expression<Func<RawAvailabilityData, bool>> FilterByCoordinatesAndDistance(Point coordinates,[m
             double radius)[m
[36m@@ -21,7 +21,7 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability[m
             RoomDetails roomDetails)[m
         {[m
             return item => item.PermittedOccupancy.AdultsNumber >= roomDetails.AdultsNumber &&[m
[31m-                           item.PermittedOccupancy.ChildrenNumber >= roomDetails.ChildrenNumber;[m
[32m+[m[32m                item.PermittedOccupancy.ChildrenNumber >= roomDetails.ChildrenNumber;[m
         }[m
 [m
 [m
[36m@@ -40,18 +40,18 @@[m [mnamespace Hiroshima.DirectContracts.Services.Availability[m
         public static Expression<Func<RawAvailabilityData, bool>> FilterByAccommodationLocality(string name)[m
         {[m
             return item => EF.Functions.ILike(item.Accommodation.Location.Locality.Name.Ar, $"%{name}%") ||[m
[31m-                           EF.Functions.ILike(item.Accommodation.Location.Locality.Name.En, $"%{name}%") ||[m
[31m-                           EF.Functions.ILike(item.Accommodation.Location.Locality.Name.Es, $"%{name}%") ||[m
[31m-                           EF.Functions.ILike(item.Accommodation.Location.Locality.Name.Ru, $"%{name}%");[m
[32m+[m[32m                EF.Functions.ILike(item.Accommodation.Location.Locality.Name.En, $"%{name}%") ||[m
[32m+[m[32m                EF.Functions.ILike(item.Accommodation.Location.Locality.Name.Es, $"%{name}%") ||[m
[32m+[m[32m                EF.Functions.ILike(item.Accommodation.Location.Locality.Name.Ru, $"%{name}%");[m
         }[m
 [m
 [m
         public static Expression<Func<RawAvailabilityData, bool>> FilterByAccommodationCountry(string name)[m
         {[m
             return item => EF.Functions.ILike(item.Accommodation.Location.Locality.Country.Name.Ar, $"%{name}%") ||[m
[31m-                           EF.Functions.ILike(item.Accommodation.Location.Locality.Country.Name.En, $"%{name}%") ||[m
[31m-                           EF.Functions.ILike(item.Accommodation.Location.Locality.Country.Name.Es, $"%{name}%") ||[m
[31m-                           EF.Functions.ILike(item.Accommodation.Location.Locality.Country.Name.Ru, $"%{name}%");[m
[32m+[m[32m                EF.Functions.ILike(item.Accommodation.Location.Locality.Country.Name.En, $"%{name}%") ||[m
[32m+[m[32m                EF.Functions.ILike(item.Accommodation.Location.Locality.Country.Name.Es, $"%{name}%") ||[m
[32m+[m[32m                EF.Functions.ILike(item.Accommodation.Location.Locality.Country.Name.Ru, $"%{name}%");[m
         }[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContracts/Services/DirectContractsAvailability.cs b/Hiroshima.DirectContracts/Services/DirectContractsAvailability.cs[m
[1mindex d14df54..f49b7b5 100644[m
[1m--- a/Hiroshima.DirectContracts/Services/DirectContractsAvailability.cs[m
[1m+++ b/Hiroshima.DirectContracts/Services/DirectContractsAvailability.cs[m
[36m@@ -3,6 +3,8 @@[m [musing System.Linq;[m
 using System.Threading.Tasks;[m
 using Hiroshima.DbData;[m
 using HappyTravel.EdoContracts.Accommodations;[m
[32m+[m[32musing HappyTravel.Logger;[m
[32m+[m[32musing Hiroshima.Common;[m
 using Hiroshima.Common.Models.Enums;[m
 using Hiroshima.DirectContracts.Services.Availability;[m
 using NetTopologySuite.Geometries;[m
[36m@@ -12,19 +14,23 @@[m [mnamespace Hiroshima.DirectContracts.Services[m
 {[m
     public class DirectContractsAvailability : IDirectContractsAvailability[m
     {[m
[31m-        public DirectContractsAvailability(DirectContractsDbContext dbContext, GeometryFactory geometryFactory)[m
[32m+[m[32m        public DirectContractsAvailability(DirectContractsDbContext dbContext, GeometryFactory geometryFactory, ILogger logger)[m
         {[m
             _dbContext = dbContext;[m
             _geometryFactory = geometryFactory;[m
[32m+[m[32m            _logger = logger;[m
 [m
         }[m
 [m
[32m+[m[32m        private ILogger _logger;[m
 [m
         public async Task<AvailabilityDetails> GetAvailabilities(AvailabilityRequest availabilityRequest, Language language)[m
         {[m
[32m+[m[32m            _logger.LogInScope("third message", "availability");[m
[32m+[m[32m            _logger.LogInScope("start in dc", "direct contracts");[m
             var location = availabilityRequest.Location;[m
             var availabilityDetailsBuilder = new AvailabilityDetailsBuilder(_dbContext, language);[m
[31m-[m
[32m+[m[32m            _logger.LogInScope("end in dc", "direct contracts");[m
             if (!availabilityRequest.Location.Coordinates.Equals(default))[m
             {[m
                 if (string.IsNullOrWhiteSpace(availabilityRequest.Location.Name))[m
[36m@@ -57,7 +63,7 @@[m [mnamespace Hiroshima.DirectContracts.Services[m
                     .WithRoomDetails(availabilityRequest.RoomDetails.FirstOrDefault())[m
                     .Build();[m
             }[m
[31m-[m
[32m+[m[41m            [m
             return availabilityDetailsBuilder.EmptyAvailabilityDetails;[m
         }[m
 [m
[1mdiff --git a/Hiroshima.DirectContracts/Services/IDirectContractsAvailability.cs b/Hiroshima.DirectContracts/Services/IDirectContractsAvailability.cs[m
[1mindex 880d084..0c33427 100644[m
[1m--- a/Hiroshima.DirectContracts/Services/IDirectContractsAvailability.cs[m
[1m+++ b/Hiroshima.DirectContracts/Services/IDirectContractsAvailability.cs[m
[36m@@ -9,4 +9,4 @@[m [mnamespace Hiroshima.DirectContracts.Services[m
     {[m
         Task<AvailabilityDetails> GetAvailabilities(AvailabilityRequest request, Language language);[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContracts/Services/IDirectContractsLocation.cs b/Hiroshima.DirectContracts/Services/IDirectContractsLocation.cs[m
[1mindex e9a4851..dd72dc8 100644[m
[1m--- a/Hiroshima.DirectContracts/Services/IDirectContractsLocation.cs[m
[1m+++ b/Hiroshima.DirectContracts/Services/IDirectContractsLocation.cs[m
[36m@@ -8,4 +8,4 @@[m [mnamespace Hiroshima.DirectContracts.Services[m
     {[m
         Task<List<Location>> GetLocations();[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContracts/ServicesExtensions.cs b/Hiroshima.DirectContracts/ServicesExtensions.cs[m
[1mindex ec81a1e..382136b 100644[m
[1m--- a/Hiroshima.DirectContracts/ServicesExtensions.cs[m
[1m+++ b/Hiroshima.DirectContracts/ServicesExtensions.cs[m
[36m@@ -13,14 +13,14 @@[m [mnamespace Hiroshima.DirectContracts[m
             services.AddEntityFrameworkNpgsql().AddDbContextPool<DirectContractsDbContext>(options =>[m
             {[m
                 options.UseNpgsql($"server={dbOptions.Host};" +[m
[31m-                                  $"port={dbOptions.Port};" +[m
[31m-                                  $"database={dbOptions.Database};" +[m
[31m-                                  $"userId={dbOptions.UserId};" +[m
[31m-                                  $"password={dbOptions.Password};", npgsqlOptions =>[m
[31m-                {[m
[31m-                    npgsqlOptions.EnableRetryOnFailure();[m
[31m-                    npgsqlOptions.UseNetTopologySuite();[m
[31m-                });[m
[32m+[m[32m                    $"port={dbOptions.Port};" +[m
[32m+[m[32m                    $"database={dbOptions.Database};" +[m
[32m+[m[32m                    $"userId={dbOptions.UserId};" +[m
[32m+[m[32m                    $"password={dbOptions.Password};", npgsqlOptions =>[m
[32m+[m[32m                    {[m
[32m+[m[32m                        npgsqlOptions.EnableRetryOnFailure();[m
[32m+[m[32m                        npgsqlOptions.UseNetTopologySuite();[m
[32m+[m[32m                    });[m
                 options.EnableSensitiveDataLogging(false);[m
 [m
                 options.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);[m
[36m@@ -29,6 +29,5 @@[m [mnamespace Hiroshima.DirectContracts[m
             services.AddTransient<IDirectContractsLocation, DirectContractsLocation>();[m
             return services;[m
         }[m
[31m-[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContractsDataSeeder/DataSeeder.cs b/Hiroshima.DirectContractsDataSeeder/DataSeeder.cs[m
[1mindex 946d9d5..98b5069 100644[m
[1m--- a/Hiroshima.DirectContractsDataSeeder/DataSeeder.cs[m
[1m+++ b/Hiroshima.DirectContractsDataSeeder/DataSeeder.cs[m
[36m@@ -1,6 +1,7 @@[m
 ï»¿using System;[m
 using System.Collections.Generic;[m
 using System.Linq;[m
[32m+[m[32musing HappyTravel.EdoContracts.Accommodations.Enums;[m
 using Hiroshima.Common.Models;[m
 using Hiroshima.Common.Models.Accommodation;[m
 using Hiroshima.Common.Models.Enums;[m
[36m@@ -24,6 +25,7 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
             dbContext.SaveChanges();[m
         }[m
 [m
[32m+[m
         private static void AddOneAndOnlyContract(DirectContractsDbContext dbContext)[m
         {[m
             var accommodation = dbContext.Accommodations.FirstOrDefault(a => a.Name.En.Equals("ONE&ONLY ROYAL MIRAGE"));[m
[36m@@ -32,11 +34,12 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                 var hotelId = 1;[m
 [m
                 #region AddAccommodation[m
[32m+[m
                 dbContext.Accommodations.Add([m
                     new Accommodation[m
                     {[m
                         Id = hotelId,[m
[31m-                        Rating = AccommodationRating.FiveStars,[m
[32m+[m[32m                        Rating = AccommodationRatings.FiveStars,[m
                         PropertyType = PropertyTypes.Hotels,[m
                         Name = new MultiLanguage<string>[m
                         {[m
[36m@@ -51,8 +54,8 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         },[m
                         Schedule = new Schedule[m
                         {[m
[31m-                            CheckInTime = "13:00",[m
[31m-                            CheckOutTime = "11:00",[m
[32m+[m[32m                            CheckInTime = "15:00",[m
[32m+[m[32m                            CheckOutTime = "10:00",[m
                             PortersStartTime = "11:00",[m
                             PortersEndTime = "16:00"[m
                         },[m
[36m@@ -61,11 +64,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                             Description = new MultiLanguage<string>[m
                             {[m
                                 Ar =[m
[31m-                                "65 ÙØ¯Ø§Ù ÙÙ Ø§ÙØ­Ø¯Ø§Ø¦Ù Ø§ÙØºÙØ§Ø¡ ÙÙÙÙÙÙØªØ± ÙÙ Ø§ÙØ´ÙØ§Ø·Ø¦ Ø§ÙØ®Ø§ØµØ© ØªÙØ«Ù Ø£ÙÙÙØ°Ø¬Ø§Ù ÙÙØ³ÙØ§ÙÙØ§ÙØ±Ø®Ø§Ø¡ ÙÙÙØ·Ø¹Ø§ Ø§ÙÙØ¸ÙØ±.",[m
[32m+[m[32m                                    "65 ÙØ¯Ø§Ù ÙÙ Ø§ÙØ­Ø¯Ø§Ø¦Ù Ø§ÙØºÙØ§Ø¡ ÙÙÙÙÙÙØªØ± ÙÙ Ø§ÙØ´ÙØ§Ø·Ø¦ Ø§ÙØ®Ø§ØµØ© ØªÙØ«Ù Ø£ÙÙÙØ°Ø¬Ø§Ù ÙÙØ³ÙØ§ÙÙØ§ÙØ±Ø®Ø§Ø¡ ÙÙÙØ·Ø¹Ø§ Ø§ÙÙØ¸ÙØ±.",[m
                                 En =[m
[31m-                                "Set in 65 acres of lush gardens and a kilometer of private beach, peaceful lives in remarkable opulence.",[m
[32m+[m[32m                                    "Set in 65 acres of lush gardens and a kilometer of private beach, peaceful lives in remarkable opulence.",[m
                                 Ru =[m
[31m-                                "26 Ð³ÐµÐºÑÐ°ÑÐ¾Ð² Ð»Ð°Ð½Ð´ÑÐ°ÑÑÐ½ÑÑ ÑÐ°Ð´Ð¾Ð², ÑÐ¾Ð±ÑÑÐ²ÐµÐ½Ð½ÑÐ¹ Ð¿Ð»ÑÐ¶ Ð¿ÑÐ¾ÑÑÐ¶ÐµÐ½Ð½Ð¾ÑÑÑÑ Ð² Ð¾Ð´Ð¸Ð½ ÐºÐ¸Ð»Ð¾Ð¼ÐµÑÑ, ÑÐ¼Ð¸ÑÐ¾ÑÐ²Ð¾ÑÐµÐ½Ð½Ð°Ñ Ð¾Ð±ÑÑÐ°Ð½Ð¾Ð²ÐºÐ° Ð¸ ÑÐ¾ÑÐºÐ¾ÑÐ½Ð¾Ðµ Ð¾ÐºÑÑÐ¶ÐµÐ½Ð¸Ðµ.",[m
[32m+[m[32m                                    "26 Ð³ÐµÐºÑÐ°ÑÐ¾Ð² Ð»Ð°Ð½Ð´ÑÐ°ÑÑÐ½ÑÑ ÑÐ°Ð´Ð¾Ð², ÑÐ¾Ð±ÑÑÐ²ÐµÐ½Ð½ÑÐ¹ Ð¿Ð»ÑÐ¶ Ð¿ÑÐ¾ÑÑÐ¶ÐµÐ½Ð½Ð¾ÑÑÑÑ Ð² Ð¾Ð´Ð¸Ð½ ÐºÐ¸Ð»Ð¾Ð¼ÐµÑÑ, ÑÐ¼Ð¸ÑÐ¾ÑÐ²Ð¾ÑÐµÐ½Ð½Ð°Ñ Ð¾Ð±ÑÑÐ°Ð½Ð¾Ð²ÐºÐ° Ð¸ ÑÐ¾ÑÐºÐ¾ÑÐ½Ð¾Ðµ Ð¾ÐºÑÑÐ¶ÐµÐ½Ð¸Ðµ.",[m
                             }[m
                         },[m
                         Amenities = new List<MultiLanguage<string>>[m
[36m@@ -108,376 +111,404 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                             Source = "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ6HkA4WClkmu3oOM0iuENG66UC6iKZNUrefe0iJ__MX5ZbValF"[m
                         }[m
                     });[m
[32m+[m
                 #endregion[m
 [m
                 #region AddLocation[m
[31m-                dbContext.Locations.AddRange(new[]{new Location.Location()[m
[31m-            {[m
[31m-                Coordinates = new Point(55.153219,25.097596),[m
[31m-                AccommodationId = hotelId,[m
[31m-                Address = new MultiLanguage<string>[m
[32m+[m
[32m+[m[32m                dbContext.Locations.AddRange(new[][m
                 {[m
[31m-                    Ar = "Ø´Ø§Ø±Ø¹ Ø§ÙÙÙÙ Ø³ÙÙØ§Ù Ø¨Ù Ø¹Ø¨Ø¯Ø§ÙØ¹Ø²ÙØ² Ø¢Ù Ø³Ø¹ÙØ¯ - Ø¯Ø¨Ù",[m
[31m-                    En = "King Salman Bin Abdulaziz Al Saud St - Dubai",[m
[31m-                    Ru = "King Salman Bin Abdulaziz Al Saud St - Dubai - ÐÐÐ­"[m
[31m-                },[m
[31m-                LocalityId = 1[m
[32m+[m[32m                    new Location.Location()[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Coordinates = new Point(55.153219, 25.097596),[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Address = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            Ar = "Ø´Ø§Ø±Ø¹ Ø§ÙÙÙÙ Ø³ÙÙØ§Ù Ø¨Ù Ø¹Ø¨Ø¯Ø§ÙØ¹Ø²ÙØ² Ø¢Ù Ø³Ø¹ÙØ¯ - Ø¯Ø¨Ù",[m
[32m+[m[32m                            En = "King Salman Bin Abdulaziz Al Saud St - Dubai",[m
[32m+[m[32m                            Ru = "King Salman Bin Abdulaziz Al Saud St - Dubai - ÐÐÐ­"[m
[32m+[m[32m                        },[m
[32m+[m[32m                        LocalityId = 1[m
[32m+[m[32m                    }[m
[32m+[m[32m                });[m
 [m
[31m-            }});[m
                 #endregion[m
 [m
                 #region AddSeasons[m
[32m+[m
                 dbContext.Seasons.AddRange([m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 11,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2020, 1, 8),[m
[31m-                    EndDate = new DateTime(2020, 1, 14)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 12,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH II",[m
[31m-                    StartDate = new DateTime(2020, 1, 15),[m
[31m-                    EndDate = new DateTime(2020, 1, 24)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 13,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2020, 1, 25),[m
[31m-                    EndDate = new DateTime(2020, 2, 7)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 14,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK I",[m
[31m-                    StartDate = new DateTime(2020, 2, 8),[m
[31m-                    EndDate = new DateTime(2020, 2, 21)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 15,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2020, 2, 22),[m
[31m-                    EndDate = new DateTime(2020, 3, 20)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 16,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK I",[m
[31m-                    StartDate = new DateTime(2020, 3, 21),[m
[31m-                    EndDate = new DateTime(2020, 3, 27)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 17,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK II",[m
[31m-                    StartDate = new DateTime(2020, 3, 28),[m
[31m-                    EndDate = new DateTime(2020, 4, 12)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 18,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK I",[m
[31m-                    StartDate = new DateTime(2020, 4, 13),[m
[31m-                    EndDate = new DateTime(2020, 4, 18)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 19,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2020, 4, 19),[m
[31m-                    EndDate = new DateTime(2020, 5, 3)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 20,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "SHOULDER",[m
[31m-                    StartDate = new DateTime(2020, 5, 4),[m
[31m-                    EndDate = new DateTime(2020, 5, 31)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 21,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "LOW",[m
[31m-                    StartDate = new DateTime(2020, 7, 1),[m
[31m-                    EndDate = new DateTime(2020, 9, 4)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 22,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "SHOULDER",[m
[31m-                    StartDate = new DateTime(2020, 9, 5),[m
[31m-                    EndDate = new DateTime(2020, 9, 25)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 23,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH II",[m
[31m-                    StartDate = new DateTime(2020, 9, 26),[m
[31m-                    EndDate = new DateTime(2020, 10, 9)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 24,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2020, 10, 10),[m
[31m-                    EndDate = new DateTime(2020, 10, 16)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 25,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK I",[m
[31m-                    StartDate = new DateTime(2020, 10, 17),[m
[31m-                    EndDate = new DateTime(2020, 10, 23)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 26,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK II",[m
[31m-                    StartDate = new DateTime(2020, 10, 24),[m
[31m-                    EndDate = new DateTime(2020, 11, 6)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 27,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2020, 11, 7),[m
[31m-                    EndDate = new DateTime(2020, 12, 4)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 28,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH II",[m
[31m-                    StartDate = new DateTime(2020, 12, 5),[m
[31m-                    EndDate = new DateTime(2020, 12, 18)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 29,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2020, 12, 19),[m
[31m-                    EndDate = new DateTime(2020, 12, 25)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 30,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "FESTIVE",[m
[31m-                    StartDate = new DateTime(2020, 12, 26),[m
[31m-                    EndDate = new DateTime(2021, 1, 3)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 31,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK I",[m
[31m-                    StartDate = new DateTime(2021, 1, 4),[m
[31m-                    EndDate = new DateTime(2021, 1, 10)[m
[31m-                }, new Season[m
[31m-                {[m
[31m-                    Id = 32,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2021, 1, 11),[m
[31m-                    EndDate = new DateTime(2021, 2, 5)[m
[31m-                }, new Season[m
[31m-                {[m
[31m-                    Id = 33,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK I",[m
[31m-                    StartDate = new DateTime(2021, 2, 6),[m
[31m-                    EndDate = new DateTime(2021, 2, 19)[m
[31m-                }, new Season[m
[31m-                {[m
[31m-                    Id = 34,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2021, 2, 20),[m
[31m-                    EndDate = new DateTime(2021, 3, 19)[m
[31m-                }, new Season[m
[31m-                {[m
[31m-                    Id = 35,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK I",[m
[31m-                    StartDate = new DateTime(2021, 3, 20),[m
[31m-                    EndDate = new DateTime(2021, 3, 26)[m
[31m-                }, new Season[m
[31m-                {[m
[31m-                    Id = 36,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "PEAK II",[m
[31m-                    StartDate = new DateTime(2021, 3, 27),[m
[31m-                    EndDate = new DateTime(2021, 4, 10)[m
[31m-                },[m
[31m-                new Season[m
[31m-                {[m
[31m-                    Id = 37,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = "HIGH I",[m
[31m-                    StartDate = new DateTime(2021, 4, 11),[m
[31m-                    EndDate = new DateTime(2021, 5, 7)[m
[31m-                }[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 11,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 1, 8),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 1, 14)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 12,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH II",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 1, 15),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 1, 24)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 13,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 1, 25),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 7)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 14,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 8),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 21)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 15,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 22),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 3, 20)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 16,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 3, 21),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 3, 27)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 17,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK II",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 3, 28),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 4, 12)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 18,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 4, 13),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 4, 18)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 19,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 4, 19),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 5, 3)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 20,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "SHOULDER",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 5, 4),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 5, 31)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 21,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "LOW",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 7, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 9, 4)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 22,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "SHOULDER",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 9, 5),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 9, 25)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 23,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH II",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 9, 26),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 9)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 24,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 10),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 16)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 25,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 17),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 23)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 26,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK II",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 24),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 11, 6)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 27,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 11, 7),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 12, 4)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 28,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH II",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 5),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 12, 18)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 29,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 19),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 12, 25)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 30,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "FESTIVE",[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 26),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 1, 3)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 31,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK I",[m
[32m+[m[32m                        StartDate = new DateTime(2021, 1, 4),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 1, 10)[m
[32m+[m[32m                    }, new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 32,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2021, 1, 11),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 2, 5)[m
[32m+[m[32m                    }, new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 33,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK I",[m
[32m+[m[32m                        StartDate = new DateTime(2021, 2, 6),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 2, 19)[m
[32m+[m[32m                    }, new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 34,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2021, 2, 20),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 3, 19)[m
[32m+[m[32m                    }, new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 35,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK I",[m
[32m+[m[32m                        StartDate = new DateTime(2021, 3, 20),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 3, 26)[m
[32m+[m[32m                    }, new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 36,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "PEAK II",[m
[32m+[m[32m                        StartDate = new DateTime(2021, 3, 27),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 4, 10)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Season[m
[32m+[m[32m                    {[m
[32m+[m[32m                        Id = 37,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = "HIGH I",[m
[32m+[m[32m                        StartDate = new DateTime(2021, 4, 11),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 5, 7)[m
[32m+[m[32m                    }[m
                 );[m
[32m+[m
                 #endregion[m
 [m
                 #region AddRooms[m
[31m-                dbContext.Rooms.AddRange(new[]{new Room[m
[32m+[m
[32m+[m[32m                dbContext.Rooms.AddRange(new[][m
                 {[m
[31m-                    Id = 20,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Palace Superior Deluxe Room"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 21,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 20,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Palace Superior Deluxe Room"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Palace Gold Club Room"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 22,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 21,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Palace Gold Club Room"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Palace One Bedroom Executive Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 23,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 22,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Palace One Bedroom Executive Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Palace One Bedroom Golf Club Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 24,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 23,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Palace One Bedroom Golf Club Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Palace Two Bedroom Executive Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 25,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 24,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Palace Two Bedroom Executive Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Palace Two Bedroom Golf Club Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 26,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 25,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Palace Two Bedroom Golf Club Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Palace Two Bedroom Royal Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 27,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 26,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Palace Two Bedroom Royal Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Arabian Court Delux Room"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 28,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 27,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Arabian Court Delux Room"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Arabian Court Two Deluxe Rooms Family Accommodation"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 29,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 28,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Arabian Court Two Deluxe Rooms Family Accommodation"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Arabian Court One Bedroom Executive Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 30,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 29,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Arabian Court One Bedroom Executive Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Arabian Court Two Bedroom Executive Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 31,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 30,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Arabian Court Two Bedroom Executive Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Arabian Court Prince Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 32,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 31,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Arabian Court Prince Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Residence Prestige Room"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 33,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 32,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Residence Prestige Room"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Residence Junior Room"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 34,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 33,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Residence Junior Room"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Residence Executive Suite"[m
[31m-                    }[m
[31m-                },new Room[m
[31m-                {[m
[31m-                    Id = 35,[m
[31m-                    AccommodationId = hotelId,[m
[31m-                    Name = new MultiLanguage<string>[m
[32m+[m[32m                        Id = 34,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Residence Executive Suite"[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new Room[m
                     {[m
[31m-                        En = "Residence Garden Beach Villa"[m
[32m+[m[32m                        Id = 35,[m
[32m+[m[32m                        AccommodationId = hotelId,[m
[32m+[m[32m                        Name = new MultiLanguage<string>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            En = "Residence Garden Beach Villa"[m
[32m+[m[32m                        }[m
                     }[m
[31m-                } });[m
[32m+[m[32m                });[m
[32m+[m
                 #endregion[m
 [m
                 #region AddRates[m
[32m+[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 11, 13, 15, 19 },[m
[32m+[m[32m                    new[] {11, 13, 15, 19},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 2465),[m
[36m@@ -495,10 +526,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 3755),[m
                         (33, 6090),[m
                         (34, 8460),[m
[31m-                        (35, 30000)});[m
[32m+[m[32m                        (35, 30000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 12, 23, 28 },[m
[32m+[m[32m                    new[] {12, 23, 28},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 2100),[m
[36m@@ -516,10 +548,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 3150),[m
                         (33, 5250),[m
                         (34, 6900),[m
[31m-                        (35, 29000)});[m
[32m+[m[32m                        (35, 29000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 14, 16, 18, 25 },[m
[32m+[m[32m                    new[] {14, 16, 18, 25},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 3170),[m
[36m@@ -537,10 +570,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 4300),[m
                         (33, 7000),[m
                         (34, 9800),[m
[31m-                        (35, 30000)});[m
[32m+[m[32m                        (35, 30000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 17, 26 },[m
[32m+[m[32m                    new[] {17, 26},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 3780),[m
[36m@@ -558,10 +592,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 5245),[m
                         (33, 8780),[m
                         (34, 11780),[m
[31m-                        (35, 36000)});[m
[32m+[m[32m                        (35, 36000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 20, 22 },[m
[32m+[m[32m                    new[] {20, 22},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 1830),[m
[36m@@ -579,10 +614,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 2835),[m
                         (33, 4700),[m
                         (34, 5400),[m
[31m-                        (35, 24000)});[m
[32m+[m[32m                        (35, 24000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 21 },[m
[32m+[m[32m                    new[] {21},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 1560),[m
[36m@@ -600,10 +636,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 2300),[m
                         (33, 3540),[m
                         (34, 4900),[m
[31m-                        (35, 24000)});[m
[32m+[m[32m                        (35, 24000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 24, 27, 29 },[m
[32m+[m[32m                    new[] {24, 27, 29},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 1560),[m
[36m@@ -621,10 +658,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 2300),[m
                         (33, 3540),[m
                         (34, 4900),[m
[31m-                        (35, 24000)});[m
[32m+[m[32m                        (35, 24000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 30 },[m
[32m+[m[32m                    new[] {30},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 4600),[m
[36m@@ -642,10 +680,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 6350),[m
                         (33, 9300),[m
                         (34, 11750),[m
[31m-                        (35, 38000)});[m
[32m+[m[32m                        (35, 38000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 31, 33, 35 },[m
[32m+[m[32m                    new[] {31, 33, 35},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 3170),[m
[36m@@ -663,10 +702,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 4300),[m
                         (33, 7000),[m
                         (34, 9800),[m
[31m-                        (35, 3000)});[m
[32m+[m[32m                        (35, 3000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 32, 34 },[m
[32m+[m[32m                    new[] {32, 34},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 2465),[m
[36m@@ -684,10 +724,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 3755),[m
                         (33, 6090),[m
                         (34, 8460),[m
[31m-                        (35, 30000)});[m
[32m+[m[32m                        (35, 30000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 36 },[m
[32m+[m[32m                    new[] {36},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 3780),[m
[36m@@ -705,10 +746,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 5245),[m
                         (33, 8780),[m
                         (34, 11780),[m
[31m-                        (35, 36000)});[m
[32m+[m[32m                        (35, 36000)[m
[32m+[m[32m                    });[m
                 FillRates([m
                     dbContext,[m
[31m-                    new[] { 37 },[m
[32m+[m[32m                    new[] {37},[m
                     new List<(int, decimal)>[m
                     {[m
                         (20, 2465),[m
[36m@@ -726,261 +768,352 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         (32, 3755),[m
                         (33, 6090),[m
                         (34, 8460),[m
[31m-                        (35, 30000)});[m
[32m+[m[32m                        (35, 30000)[m
[32m+[m[32m                    });[m
[32m+[m
[32m+[m[32m                #endregion[m
[32m+[m
[32m+[m[32m                #region PromotionalOffers[m
[32m+[m
[32m+[m[32m                var offers =[m
[32m+[m[32m                    new (int discountPct, DateTime bookBy, DateTime validFrom, DateTime validTo, string bookingCode,[m
[32m+[m[32m                        MultiLanguage<string> details)[][m
[32m+[m[32m                        {[m
[32m+[m[32m                            (30, new DateTime(2019, 12, 13), new DateTime(2020, 1, 8), new DateTime(2020, 2, 21), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, DECEMBER 13, 2019 receive a 30% discount"}),[m
[32m+[m[32m                            (25, new DateTime(2019, 12, 13), new DateTime(2020, 2, 22), new DateTime(2020, 3, 20), "25% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, DECEMBER 13, 2019 receive a 25% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2019, 12, 13), new DateTime(2020, 3, 21), new DateTime(2020, 3, 27), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, DECEMBER 13, 2019 receive a 35% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2020, 2, 28), new DateTime(2020, 3, 28), new DateTime(2020, 4, 3), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 35% discount"}),[m
[32m+[m[32m                            (25, new DateTime(2020, 2, 28), new DateTime(2020, 4, 4), new DateTime(2020, 4, 12), "25% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 25% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2020, 2, 28), new DateTime(2020, 4, 13), new DateTime(2020, 4, 18), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 35% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 2, 28), new DateTime(2020, 4, 19), new DateTime(2020, 5, 3), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2020, 4, 3), new DateTime(2020, 5, 4), new DateTime(2020, 5, 31), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, APRIL 28, 2020 receive a 35% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 5, 8), new DateTime(2020, 6, 1), new DateTime(2020, 9, 4), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, MAY 8, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 8, 14), new DateTime(2020, 9, 5), new DateTime(2020, 9, 25), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, AUGUST 14, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 8, 14), new DateTime(2020, 9, 26), new DateTime(2020, 10, 16), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, AUGUST 14, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2020, 8, 14), new DateTime(2020, 10, 17), new DateTime(2020, 12, 4), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, AUGUST 14, 2020 receive a 20% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 10, 2), new DateTime(2020, 12, 5), new DateTime(2020, 12, 18), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, OCTOBER 2, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2020, 11, 1), new DateTime(2020, 12, 19), new DateTime(2020, 12, 25), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, NOVEMBER 1, 2020 receive a 20% discount"}),[m
[32m+[m[32m                            (10, new DateTime(2020, 11, 1), new DateTime(2020, 12, 26), new DateTime(2021, 1, 3), "10% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, NOVEMBER 1, 2020 receive a 10% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2020, 11, 1), new DateTime(2021, 1, 4), new DateTime(2021, 3, 10), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, NOVEMBER 1, 2020 receive a 20% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2021, 2, 26), new DateTime(2021, 3, 11), new DateTime(2021, 5, 7), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2021 receive a 20% discount"}),[m
[32m+[m[32m                        };[m
[32m+[m[32m                FillPromotions(dbContext, new[] {32, 33, 34, 35}, offers);[m
[32m+[m
[32m+[m[32m                offers =[m
[32m+[m[32m                    new (int discountPct, DateTime bookBy, DateTime validFrom, DateTime validTo, string bookingCode,[m
[32m+[m[32m                        MultiLanguage<string> details)[][m
[32m+[m[32m                        {[m
[32m+[m[32m                            (30, new DateTime(2019, 12, 13), new DateTime(2020, 1, 8), new DateTime(2020, 2, 21), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, DECEMBER 13, 2019 receive a 30% discount"}),[m
[32m+[m[32m                            (25, new DateTime(2019, 12, 13), new DateTime(2020, 2, 22), new DateTime(2020, 3, 20), "25% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, DECEMBER 13, 2019 receive a 25% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2019, 12, 13), new DateTime(2020, 3, 21), new DateTime(2020, 3, 27), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, DECEMBER 13, 2019 receive a 35% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2020, 2, 28), new DateTime(2020, 3, 28), new DateTime(2020, 4, 3), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 35% discount"}),[m
[32m+[m[32m                            (25, new DateTime(2020, 2, 28), new DateTime(2020, 4, 4), new DateTime(2020, 4, 12), "25% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 25% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2020, 2, 28), new DateTime(2020, 4, 13), new DateTime(2020, 4, 18), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 35% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 2, 28), new DateTime(2020, 4, 19), new DateTime(2020, 5, 3), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (35, new DateTime(2020, 4, 3), new DateTime(2020, 5, 4), new DateTime(2020, 5, 31), "35% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, APRIL 28, 2020 receive a 35% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 5, 8), new DateTime(2020, 6, 1), new DateTime(2020, 9, 4), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, MAY 8, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 8, 14), new DateTime(2020, 9, 5), new DateTime(2020, 9, 25), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, AUGUST 14, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 8, 14), new DateTime(2020, 9, 26), new DateTime(2020, 10, 16), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, AUGUST 14, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2020, 8, 14), new DateTime(2020, 10, 17), new DateTime(2020, 12, 4), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, AUGUST 14, 2020 receive a 20% discount"}),[m
[32m+[m[32m                            (30, new DateTime(2020, 10, 2), new DateTime(2020, 12, 5), new DateTime(2020, 12, 18), "30% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, OCTOBER 2, 2020 receive a 30% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2020, 11, 1), new DateTime(2020, 12, 19), new DateTime(2020, 12, 25), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, NOVEMBER 1, 2020 receive a 20% discount"}),[m
[32m+[m[32m                            (10, new DateTime(2020, 11, 1), new DateTime(2020, 12, 26), new DateTime(2021, 1, 3), "10% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, NOVEMBER 1, 2020 receive a 10% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2020, 11, 1), new DateTime(2021, 1, 4), new DateTime(2021, 3, 10), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, NOVEMBER 1, 2020 receive a 20% discount"}),[m
[32m+[m[32m                            (20, new DateTime(2021, 2, 26), new DateTime(2021, 3, 11), new DateTime(2021, 5, 7), "20% PROMO",[m
[32m+[m[32m                                new MultiLanguage<string> {En = "Book on or before Friday, FEBRUARY 28, 2021 receive a 20% discount"}),[m
[32m+[m[32m                        };[m
[32m+[m[32m                FillPromotions(dbContext, new[] {20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}, offers);[m
[32m+[m
                 #endregion[m
 [m
                 #region AddStopSaleDate //Test data[m
[32m+[m
                 dbContext.StopSaleDates.AddRange(new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 20,[m
[31m-                    StartDate = new DateTime(2020, 4, 1),[m
[31m-                    EndDate = new DateTime(2020, 4, 10)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 20,[m
[31m-                    StartDate = new DateTime(2020, 7, 10),[m
[31m-                    EndDate = new DateTime(2020, 7, 13)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 20,[m
[31m-                    StartDate = new DateTime(2020, 10, 15),[m
[31m-                    EndDate = new DateTime(2020, 10, 18)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 20,[m
[31m-                    StartDate = new DateTime(2021, 1, 10),[m
[31m-                    EndDate = new DateTime(2021, 1, 12)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 21,[m
[31m-                    StartDate = new DateTime(2020, 2, 5),[m
[31m-                    EndDate = new DateTime(2020, 2, 7)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 21,[m
[31m-                    StartDate = new DateTime(2020, 10, 15),[m
[31m-                    EndDate = new DateTime(2020, 10, 18)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 21,[m
[31m-                    StartDate = new DateTime(2020, 12, 28),[m
[31m-                    EndDate = new DateTime(2021, 1, 2)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 22,[m
[31m-                    StartDate = new DateTime(2020, 2, 5),[m
[31m-                    EndDate = new DateTime(2020, 2, 7)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 22,[m
[31m-                    StartDate = new DateTime(2020, 10, 15),[m
[31m-                    EndDate = new DateTime(2020, 10, 18)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 22,[m
[31m-                    StartDate = new DateTime(2020, 12, 28),[m
[31m-                    EndDate = new DateTime(2020, 12, 29)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 23,[m
[31m-                    StartDate = new DateTime(2020, 2, 5),[m
[31m-                    EndDate = new DateTime(2020, 2, 10)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 23,[m
[31m-                    StartDate = new DateTime(2020, 11, 1),[m
[31m-                    EndDate = new DateTime(2020, 11, 3)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 23,[m
[31m-                    StartDate = new DateTime(2020, 8, 7),[m
[31m-                    EndDate = new DateTime(2020, 8, 10)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 24,[m
[31m-                    StartDate = new DateTime(2020, 3, 8),[m
[31m-                    EndDate = new DateTime(2020, 3, 10)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 24,[m
[31m-                    StartDate = new DateTime(2020, 7, 1),[m
[31m-                    EndDate = new DateTime(2020, 7, 3)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 24,[m
[31m-                    StartDate = new DateTime(2020, 9, 3),[m
[31m-                    EndDate = new DateTime(2020, 9, 5)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 25,[m
[31m-                    StartDate = new DateTime(2020, 1, 29),[m
[31m-                    EndDate = new DateTime(2020, 2, 1)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 25,[m
[31m-                    StartDate = new DateTime(2020, 9, 15),[m
[31m-                    EndDate = new DateTime(2020, 9, 16)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 25,[m
[31m-                    StartDate = new DateTime(2020, 12, 30),[m
[31m-                    EndDate = new DateTime(2021, 1, 2)[m
[31m-                },[m
[31m-                new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 26,[m
[31m-                    StartDate = new DateTime(2020, 1, 10),[m
[31m-                    EndDate = new DateTime(2020, 1, 12)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 26,[m
[31m-                    StartDate = new DateTime(2020, 3, 4),[m
[31m-                    EndDate = new DateTime(2020, 3, 7)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 26,[m
[31m-                    StartDate = new DateTime(2020, 6, 9),[m
[31m-                    EndDate = new DateTime(2020, 6, 11)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 27,[m
[31m-                    StartDate = new DateTime(2020, 1, 18),[m
[31m-                    EndDate = new DateTime(2020, 1, 19)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 27,[m
[31m-                    StartDate = new DateTime(2020, 2, 27),[m
[31m-                    EndDate = new DateTime(2020, 3, 1)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 27,[m
[31m-                    StartDate = new DateTime(2020, 12, 26),[m
[31m-                    EndDate = new DateTime(2020, 12, 27)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 28,[m
[31m-                    StartDate = new DateTime(2020, 4, 5),[m
[31m-                    EndDate = new DateTime(2020, 4, 7)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 28,[m
[31m-                    StartDate = new DateTime(2020, 11, 3),[m
[31m-                    EndDate = new DateTime(2020, 11, 5)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 28,[m
[31m-                    StartDate = new DateTime(2020, 12, 31),[m
[31m-                    EndDate = new DateTime(2021, 1, 1)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 29,[m
[31m-                    StartDate = new DateTime(2020, 2, 7),[m
[31m-                    EndDate = new DateTime(2020, 2, 10)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 29,[m
[31m-                    StartDate = new DateTime(2020, 4, 3),[m
[31m-                    EndDate = new DateTime(2020, 4, 5)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 29,[m
[31m-                    StartDate = new DateTime(2020, 12, 1),[m
[31m-                    EndDate = new DateTime(2021, 1, 1)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 30,[m
[31m-                    StartDate = new DateTime(2020, 6, 1),[m
[31m-                    EndDate = new DateTime(2020, 9, 1)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 30,[m
[31m-                    StartDate = new DateTime(2020, 9, 2),[m
[31m-                    EndDate = new DateTime(2020, 9, 4)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 30,[m
[31m-                    StartDate = new DateTime(2020, 12, 1),[m
[31m-                    EndDate = new DateTime(2021, 12, 2)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 31,[m
[31m-                    StartDate = new DateTime(2020, 1, 6),[m
[31m-                    EndDate = new DateTime(2020, 1, 8)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 31,[m
[31m-                    StartDate = new DateTime(2020, 2, 14),[m
[31m-                    EndDate = new DateTime(2020, 2, 16)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 31,[m
[31m-                    StartDate = new DateTime(2020, 7, 5),[m
[31m-                    EndDate = new DateTime(2021, 7, 8)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 32,[m
[31m-                    StartDate = new DateTime(2020, 9, 12),[m
[31m-                    EndDate = new DateTime(2020, 9, 15)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 32,[m
[31m-                    StartDate = new DateTime(2020, 10, 2),[m
[31m-                    EndDate = new DateTime(2020, 10, 4)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 32,[m
[31m-                    StartDate = new DateTime(2019, 12, 3),[m
[31m-                    EndDate = new DateTime(2019, 12, 4)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 33,[m
[31m-                    StartDate = new DateTime(2020, 3, 6),[m
[31m-                    EndDate = new DateTime(2020, 3, 8)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 33,[m
[31m-                    StartDate = new DateTime(2020, 4, 10),[m
[31m-                    EndDate = new DateTime(2020, 4, 13)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 33,[m
[31m-                    StartDate = new DateTime(2020, 7, 1),[m
[31m-                    EndDate = new DateTime(2020, 8, 1)[m
[31m-                },[m
[31m-                new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 34,[m
[31m-                    StartDate = new DateTime(2020, 3, 3),[m
[31m-                    EndDate = new DateTime(2020, 3, 5)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 34,[m
[31m-                    StartDate = new DateTime(2020, 4, 16),[m
[31m-                    EndDate = new DateTime(2020, 4, 19)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 34,[m
[31m-                    StartDate = new DateTime(2020, 11, 23),[m
[31m-                    EndDate = new DateTime(2020, 11, 26)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 35,[m
[31m-                    StartDate = new DateTime(2020, 5, 1),[m
[31m-                    EndDate = new DateTime(2020, 5, 6)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 35,[m
[31m-                    StartDate = new DateTime(2020, 7, 19),[m
[31m-                    EndDate = new DateTime(2020, 7, 21)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 35,[m
[31m-                    StartDate = new DateTime(2020, 11, 28),[m
[31m-                    EndDate = new DateTime(2020, 12, 3)[m
[31m-                });[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 20,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 4, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 4, 10)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 20,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 7, 10),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 7, 13)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 20,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 15),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 18)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 20,[m
[32m+[m[32m                        StartDate = new DateTime(2021, 1, 10),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 1, 12)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 21,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 5),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 7)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 21,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 15),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 18)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 21,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 28),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 1, 2)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 22,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 5),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 7)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 22,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 15),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 18)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 22,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 28),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 12, 29)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 23,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 5),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 10)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 23,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 11, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 11, 3)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 23,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 8, 7),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 8, 10)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 24,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 3, 8),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 3, 10)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 24,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 7, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 7, 3)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 24,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 9, 3),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 9, 5)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 25,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 1, 29),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 1)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 25,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 9, 15),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 9, 16)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 25,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 30),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 1, 2)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 26,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 1, 10),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 1, 12)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 26,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 3, 4),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 3, 7)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 26,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 6, 9),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 6, 11)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 27,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 1, 18),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 1, 19)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 27,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 27),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 3, 1)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 27,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 26),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 12, 27)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 28,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 4, 5),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 4, 7)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 28,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 11, 3),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 11, 5)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 28,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 31),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 1, 1)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 29,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 7),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 10)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 29,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 4, 3),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 4, 5)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 29,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 1, 1)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 30,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 6, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 9, 1)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 30,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 9, 2),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 9, 4)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 30,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 12, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 12, 2)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 31,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 1, 6),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 1, 8)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 31,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 2, 14),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 2, 16)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 31,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 7, 5),[m
[32m+[m[32m                        EndDate = new DateTime(2021, 7, 8)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 32,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 9, 12),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 9, 15)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 32,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 2),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 4)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 32,[m
[32m+[m[32m                        StartDate = new DateTime(2019, 12, 3),[m
[32m+[m[32m                        EndDate = new DateTime(2019, 12, 4)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 33,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 3, 6),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 3, 8)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 33,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 4, 10),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 4, 13)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 33,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 7, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 8, 1)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 34,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 3, 3),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 3, 5)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 34,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 4, 16),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 4, 19)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 34,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 11, 23),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 11, 26)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 35,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 5, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 5, 6)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 35,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 7, 19),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 7, 21)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 35,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 11, 28),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 12, 3)[m
[32m+[m[32m                    });[m
[32m+[m
                 #endregion[m
 [m
                 #region AddPermittedOccupancy[m
[32m+[m
                 dbContext.PermittedOccupancies.AddRange([m
                     new PermittedOccupancy[m
                     {[m
[36m@@ -1063,12 +1196,13 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         AdultsNumber = 4,[m
                         ChildrenNumber = 1[m
                     }[m
[31m-                    );[m
[31m-                #endregion[m
[32m+[m[32m                );[m
 [m
[32m+[m[32m                #endregion[m
             }[m
         }[m
 [m
[32m+[m
         private static void AddJumeriahContract(DirectContractsDbContext dbContext)[m
         {[m
             var accommodation = dbContext.Accommodations.FirstOrDefault(a => a.Name.En.Equals("Burj Al Arab Jumeirah"));[m
[36m@@ -1083,7 +1217,7 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                     new Accommodation[m
                     {[m
                         Id = hotelId,[m
[31m-                        Rating = AccommodationRating.FiveStars,[m
[32m+[m[32m                        Rating = AccommodationRatings.FiveStars,[m
                         PropertyType = PropertyTypes.Hotels,[m
                         Name = new MultiLanguage<string>[m
                         {[m
[36m@@ -1098,10 +1232,10 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         },[m
                         Schedule = new Schedule[m
                         {[m
[31m-                            CheckInTime = "14:00",[m
[31m-                            CheckOutTime = "12:00",[m
[31m-                            PortersStartTime = "10:00",[m
[31m-                            PortersEndTime = "15:00"[m
[32m+[m[32m                            CheckInTime = "15:00",[m
[32m+[m[32m                            CheckOutTime = "10:00",[m
[32m+[m[32m                            PortersStartTime = "09:00",[m
[32m+[m[32m                            PortersEndTime = "19:00"[m
                         },[m
                         TextualDescription = new TextualDescription[m
                         {[m
[36m@@ -1164,7 +1298,6 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         Ru = "Level 5, Building 5 Dubai Design District PO Box 73137 Dubai,UAE"[m
                     },[m
                     LocalityId = 1[m
[31m-[m
                 });[m
 [m
                 #endregion[m
[36m@@ -1339,7 +1472,6 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
 [m
                 #endregion[m
 [m
[31m-[m
                 #region AddPrices[m
 [m
                 FillRates([m
[36m@@ -1513,40 +1645,40 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
 [m
                 //Panoramic Suite[m
                 dbContext.StopSaleDates.AddRange(new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 72,[m
[31m-                    StartDate = new DateTime(2019, 9, 28),[m
[31m-                    EndDate = new DateTime(2019, 9, 28)[m
[31m-                }, new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 72,[m
[31m-                    StartDate = new DateTime(2019, 9, 30),[m
[31m-                    EndDate = new DateTime(2019, 9, 30)[m
[31m-                },[m
[31m-                new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 72,[m
[31m-                    StartDate = new DateTime(2019, 10, 1),[m
[31m-                    EndDate = new DateTime(2019, 10, 1)[m
[31m-                },[m
[31m-                new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 73,[m
[31m-                    StartDate = new DateTime(2019, 10, 11),[m
[31m-                    EndDate = new DateTime(2019, 10, 12)[m
[31m-                },[m
[31m-                new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 73,[m
[31m-                    StartDate = new DateTime(2020, 10, 19),[m
[31m-                    EndDate = new DateTime(2020, 10, 19)[m
[31m-                },[m
[31m-                new StopSaleDate[m
[31m-                {[m
[31m-                    RoomId = 73,[m
[31m-                    StartDate = new DateTime(2020, 10, 26),[m
[31m-                    EndDate = new DateTime(2020, 10, 27)[m
[31m-                });[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 72,[m
[32m+[m[32m                        StartDate = new DateTime(2019, 9, 28),[m
[32m+[m[32m                        EndDate = new DateTime(2019, 9, 28)[m
[32m+[m[32m                    }, new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 72,[m
[32m+[m[32m                        StartDate = new DateTime(2019, 9, 30),[m
[32m+[m[32m                        EndDate = new DateTime(2019, 9, 30)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 72,[m
[32m+[m[32m                        StartDate = new DateTime(2019, 10, 1),[m
[32m+[m[32m                        EndDate = new DateTime(2019, 10, 1)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 73,[m
[32m+[m[32m                        StartDate = new DateTime(2019, 10, 11),[m
[32m+[m[32m                        EndDate = new DateTime(2019, 10, 12)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 73,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 19),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 19)[m
[32m+[m[32m                    },[m
[32m+[m[32m                    new StopSaleDate[m
[32m+[m[32m                    {[m
[32m+[m[32m                        RoomId = 73,[m
[32m+[m[32m                        StartDate = new DateTime(2020, 10, 26),[m
[32m+[m[32m                        EndDate = new DateTime(2020, 10, 27)[m
[32m+[m[32m                    });[m
 [m
                 #endregion[m
 [m
[36m@@ -1643,7 +1775,6 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                         AdultsNumber = 2,[m
                         ChildrenNumber = 2[m
                     },[m
[31m-[m
                     new PermittedOccupancy[m
                     {[m
                         RoomId = 73,[m
[36m@@ -1894,7 +2025,7 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                     {[m
                         RoomId = 74,[m
                         AdultsNumber = 1,[m
[31m-                        ChildrenNumber =5[m
[32m+[m[32m                        ChildrenNumber = 5[m
                     },[m
                     new PermittedOccupancy[m
                     {[m
[36m@@ -1941,26 +2072,40 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
 [m
                 #endregion region[m
 [m
[31m-               dbContext.SaveChanges();[m
[32m+[m[32m                dbContext.SaveChanges();[m
             }[m
         }[m
 [m
[32m+[m
         private static void FillRates(DirectContractsDbContext dbContext, int[] seasonsIds, List<(int, decimal)> roomIdsAndPrices)[m
         {[m
             foreach (var seasonId in seasonsIds)[m
[31m-            {[m
[31m-                foreach (var roomIdsAndPrice in roomIdsAndPrices)[m
[32m+[m[32m            foreach (var roomIdsAndPrice in roomIdsAndPrices)[m
[32m+[m[32m                dbContext.Rates.Add(new ContractRate[m
                 {[m
[31m-                    dbContext.Rates.Add(new ContractRate[m
[31m-                    {[m
[31m-                        SeasonId = seasonId,[m
[31m-                        RoomId = roomIdsAndPrice.Item1,[m
[31m-                        SeasonPrice = roomIdsAndPrice.Item2,[m
[31m-                        CurrencyCode = "AED"[m
[31m-                    });[m
[31m-                }[m
[31m-            }[m
[32m+[m[32m                    SeasonId = seasonId,[m
[32m+[m[32m                    RoomId = roomIdsAndPrice.Item1,[m
[32m+[m[32m                    SeasonPrice = roomIdsAndPrice.Item2,[m
[32m+[m[32m                    CurrencyCode = "AED"[m
[32m+[m[32m                });[m
         }[m
 [m
[32m+[m
[32m+[m[32m        private static void FillPromotions(DirectContractsDbContext dbContext, int[] roomIds,[m
[32m+[m[32m            (int discountPct, DateTime bookBy, DateTime validFrom, DateTime validTo, string bookingCode, MultiLanguage<string> details)[] offers)[m
[32m+[m[32m        {[m
[32m+[m[32m            foreach (var roomId in roomIds)[m
[32m+[m[32m            foreach (var offer in offers)[m
[32m+[m[32m                dbContext.PromotionalOffers.Add(new PromotionalOffer[m
[32m+[m[32m                {[m
[32m+[m[32m                    RoomId = roomId,[m
[32m+[m[32m                    DiscountPct = offer.discountPct,[m
[32m+[m[32m                    BookBy = offer.bookBy,[m
[32m+[m[32m                    ValidFrom = offer.validFrom,[m
[32m+[m[32m                    ValidTo = offer.validTo,[m
[32m+[m[32m                    BookingCode = offer.bookingCode,[m
[32m+[m[32m                    Details = offer.details[m
[32m+[m[32m                });[m
[32m+[m[32m        }[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.DirectContractsDataSeeder/Hiroshima.DirectContractsDataSeeder.csproj b/Hiroshima.DirectContractsDataSeeder/Hiroshima.DirectContractsDataSeeder.csproj[m
[1mindex d06b0b0..b688a3f 100644[m
[1m--- a/Hiroshima.DirectContractsDataSeeder/Hiroshima.DirectContractsDataSeeder.csproj[m
[1m+++ b/Hiroshima.DirectContractsDataSeeder/Hiroshima.DirectContractsDataSeeder.csproj[m
[36m@@ -6,7 +6,7 @@[m
   </PropertyGroup>[m
 [m
   <ItemGroup>[m
[31m-    <PackageReference Include="HappyTravel.EdoContracts" Version="1.0.18" />[m
[32m+[m[32m    <PackageReference Include="HappyTravel.EdoContracts" Version="1.0.23" />[m
     <PackageReference Include="HappyTravel.VaultClient" Version="1.0.3" />[m
     <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.0.0" />[m
     <PackageReference Include="Microsoft.Extensions.Configuration" Version="3.0.0" />[m
[36m@@ -28,6 +28,6 @@[m
     </None>[m
   </ItemGroup>[m
 [m
[31m-  <ProjectExtensions><VisualStudio><UserProperties appsettings_1dev_1json__JsonSchema="" /></VisualStudio></ProjectExtensions>[m
[32m+[m[32m  <ProjectExtensions><VisualStudio><UserProperties /></VisualStudio></ProjectExtensions>[m
 [m
 </Project>[m
[1mdiff --git a/Hiroshima.DirectContractsDataSeeder/Program.cs b/Hiroshima.DirectContractsDataSeeder/Program.cs[m
[1mindex e8c49eb..68010ee 100644[m
[1m--- a/Hiroshima.DirectContractsDataSeeder/Program.cs[m
[1m+++ b/Hiroshima.DirectContractsDataSeeder/Program.cs[m
[36m@@ -10,9 +10,9 @@[m [musing Microsoft.Extensions.DependencyInjection;[m
 [m
 namespace Hiroshima.DirectContractsDataSeeder[m
 {[m
[31m-    class Program[m
[32m+[m[32m    internal class Program[m
     {[m
[31m-        static void Main(string[] args)[m
[32m+[m[32m        private static void Main(string[] args)[m
         {[m
             using var dbContext = CreateDbContext();[m
             DataSeeder.AddData(dbContext);[m
[36m@@ -32,10 +32,11 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
         {[m
             var configuration = new ConfigurationBuilder()[m
                 .SetBasePath(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location))[m
[31m-                .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true)[m
[32m+[m[32m                .AddJsonFile("appsettings.json", false, true)[m
                 .Build();[m
             var dbOptions = GetDbOptions(configuration);[m
[31m-            return $"server={dbOptions["host"]};port={dbOptions["port"]};database={dbOptions["database"]};userid={dbOptions["userId"]};password={dbOptions["password"]};";[m
[32m+[m[32m            return[m
[32m+[m[32m                $"server={dbOptions["host"]};port={dbOptions["port"]};database={dbOptions["database"]};userid={dbOptions["userId"]};password={dbOptions["password"]};";[m
         }[m
 [m
 [m
[36m@@ -52,6 +53,5 @@[m [mnamespace Hiroshima.DirectContractsDataSeeder[m
                 return vaultClient.Get(configuration["Booking:Database:Options"]).Result;[m
             }[m
         }[m
[31m-        [m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.WebApi/Controllers/AccommodationsController.cs b/Hiroshima.WebApi/Controllers/AccommodationsController.cs[m
[1mindex 779bfcc..6e9a6c4 100644[m
[1m--- a/Hiroshima.WebApi/Controllers/AccommodationsController.cs[m
[1m+++ b/Hiroshima.WebApi/Controllers/AccommodationsController.cs[m
[36m@@ -1,9 +1,21 @@[m
[31m-ï»¿using System.Globalization;[m
[32m+[m[32mï»¿using System;[m
[32m+[m[32musing System.Buffers;[m
[32m+[m[32musing System.Collections.Generic;[m
[32m+[m[32musing System.Globalization;[m
[32m+[m[32musing System.IO;[m
[32m+[m[32musing System.IO.Pipelines;[m
 using System.Net;[m
[32m+[m[32musing System.Text;[m
[32m+[m[32musing System.Text.Json;[m
[32m+[m[32musing System.Threading;[m
 using System.Threading.Tasks;[m
 using HappyTravel.EdoContracts.Accommodations;[m
[32m+[m[32musing Hiroshima.WebApi.Infrastructure;[m
 using Hiroshima.WebApi.Services;[m
[32m+[m[32musing Microsoft.AspNetCore.Http;[m
[32m+[m[32musing Microsoft.AspNetCore.Http.Extensions;[m
 using Microsoft.AspNetCore.Mvc;[m
[32m+[m[32musing Microsoft.AspNetCore.Mvc.Filters;[m
 using Microsoft.Extensions.Configuration;[m
 [m
 namespace Hiroshima.WebApi.Controllers[m
[36m@@ -19,15 +31,59 @@[m [mnamespace Hiroshima.WebApi.Controllers[m
             _availability = availability;[m
         }[m
 [m
[32m+[m[32m        public class TestAttribute : Attribute, IAsyncActionFilter[m
[32m+[m[32m        {[m
[32m+[m[32m            public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)[m
[32m+[m[32m            {[m
[32m+[m[32m                var b = GetHttpRequest(context.HttpContext.Request);[m
[32m+[m[32m                await next();[m
[32m+[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            private object GetHttpRequest(HttpRequest request)[m
[32m+[m[32m            {[m
[32m+[m
[32m+[m[32m                var requestBody = GetRequestBody(request).GetAwaiter().GetResult();[m
[32m+[m[32m                return new { requestBody };[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
[32m+[m[32m        private static async Task<string> GetRequestBody(HttpRequest httpRequest)[m
[32m+[m[32m        {[m
[32m+[m[32m            httpRequest.EnableBuffering(50 * 1024, 100 * 1024);[m
[32m+[m[32m            var body = string.Empty;[m
[32m+[m[32m            try[m
[32m+[m[32m            {[m
[32m+[m[32m                using (var reader = new StreamReader(httpRequest.Body,[m
[32m+[m[32m                    Encoding.UTF8,[m
[32m+[m[32m                    false,[m
[32m+[m[32m                    Convert.ToInt32(httpRequest.ContentLength),[m
[32m+[m[32m                    true))[m
[32m+[m[32m                {[m
[32m+[m[32m                    body = await reader.ReadToEndAsync();[m
[32m+[m[32m                    httpRequest.Body.Position = 0;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            catch[m
[32m+[m[32m            {[m
[32m+[m[32m                //ignore[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            return body;[m
[32m+[m[32m        }[m
[32m+[m
 [m
         /// <summary>[m
         /// The method returns availability details[m
         /// </summary>[m
         /// <param name="request"></param>[m
         /// <returns></returns>[m
[32m+[m[32m        [Test][m
         [HttpPost("accommodations/availabilities")][m
         [ProducesResponseType(typeof(string), (int)HttpStatusCode.OK)][m
         [ProducesResponseType(typeof(ProblemDetails), (int)HttpStatusCode.BadRequest)][m
[32m+[m[41m        [m
         public async Task<IActionResult> SearchAvailabilities([FromBody] AvailabilityRequest request)[m
         {[m
             var result = await _availability.GetAvailabilities(request, CultureInfo.CurrentCulture.Name);[m
[36m@@ -39,6 +95,10 @@[m [mnamespace Hiroshima.WebApi.Controllers[m
         }[m
 [m
 [m
[32m+[m[41m       [m
[32m+[m
[32m+[m
[32m+[m
         private readonly IAvailability _availability;[m
     }[m
 }[m
[1mdiff --git a/Hiroshima.WebApi/Hiroshima.WebApi.csproj b/Hiroshima.WebApi/Hiroshima.WebApi.csproj[m
[1mindex 9b6934c..8fb44ab 100644[m
[1m--- a/Hiroshima.WebApi/Hiroshima.WebApi.csproj[m
[1m+++ b/Hiroshima.WebApi/Hiroshima.WebApi.csproj[m
[36m@@ -8,10 +8,10 @@[m
   <ItemGroup>[m
     <PackageReference Include="FloxDc.CacheFlow" Version="1.5.2" />[m
     <PackageReference Include="GeoAPI.Core" Version="1.7.5" />[m
[31m-    <PackageReference Include="HappyTravel.EdoContracts" Version="1.0.18" />[m
[32m+[m[32m    <PackageReference Include="HappyTravel.EdoContracts" Version="1.0.23" />[m
     <PackageReference Include="HappyTravel.VaultClient" Version="1.0.3" />[m
     <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.0.0" />[m
[31m-    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="4.0.0-preview8.19405.7" />[m
[32m+[m[32m    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="4.0.0" />[m
     <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.0.0">[m
       <PrivateAssets>all</PrivateAssets>[m
       <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>[m
[36m@@ -22,6 +22,7 @@[m
       <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>[m
     </PackageReference>[m
     <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="3.0.0" />[m
[32m+[m[32m    <PackageReference Include="Microsoft.Extensions.Logging" Version="3.0.0" />[m
     <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="3.0.0" />[m
     <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.0.0" />[m
     <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.0.0" />[m
[1mdiff --git a/Hiroshima.WebApi/Program.cs b/Hiroshima.WebApi/Program.cs[m
[1mindex e310a32..40563bb 100644[m
[1m--- a/Hiroshima.WebApi/Program.cs[m
[1m+++ b/Hiroshima.WebApi/Program.cs[m
[36m@@ -1,6 +1,6 @@[m
 using Microsoft.AspNetCore.Hosting;[m
[31m-using Microsoft.Extensions.Configuration;[m
 using Microsoft.Extensions.Hosting;[m
[32m+[m[32musing Microsoft.Extensions.Logging;[m
 [m
 namespace Hiroshima.WebApi[m
 {[m
[36m@@ -14,6 +14,13 @@[m [mnamespace Hiroshima.WebApi[m
 [m
         public static IHostBuilder CreateHostBuilder(string[] args) =>[m
             Host.CreateDefaultBuilder(args)[m
[31m-                .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); });[m
[32m+[m[32m                .ConfigureWebHostDefaults(webBuilder =>[m
[32m+[m[32m                {[m
[32m+[m[32m                    webBuilder.UseStartup<Startup>();[m
[32m+[m[32m                    webBuilder.ConfigureLogging(conf =>[m
[32m+[m[32m                    {[m
[32m+[m[32m                        conf.AddConsole(options =>options.LogToStandardErrorThreshold=LogLevel.Information);[m
[32m+[m[32m                    });[m
[32m+[m[32m                });[m
     }[m
 }[m
[1mdiff --git a/Hiroshima.WebApi/Services/Availability.cs b/Hiroshima.WebApi/Services/Availability.cs[m
[1mindex 2aee038..805bca6 100644[m
[1m--- a/Hiroshima.WebApi/Services/Availability.cs[m
[1m+++ b/Hiroshima.WebApi/Services/Availability.cs[m
[36m@@ -6,24 +6,29 @@[m [musing Hiroshima.Common.Utils.Languages;[m
 using Hiroshima.DirectContracts.Services;[m
 using Hiroshima.WebApi.Infrastructure;[m
 using Microsoft.AspNetCore.Mvc;[m
[32m+[m[32musing HappyTravel.Logger;[m
[32m+[m[32musing HappyTravel.Logger.Models;[m
 [m
 namespace Hiroshima.WebApi.Services[m
 {[m
     public class Availability : IAvailability[m
     {[m
         public Availability([m
[31m-            IDirectContractsAvailability directContractsAvailability)[m
[32m+[m[32m            IDirectContractsAvailability directContractsAvailability, ILogger logger)[m
         {[m
[32m+[m[32m            _logger = logger;[m
[32m+[m[32m            logger.Log(LogLevel.Warning, "test1", "sheeeet");[m
[32m+[m[32m            logger.LogInScope("first message", "availability");[m
             _directContractsAvailability = directContractsAvailability;[m
         }[m
 [m
[31m-[m
[32m+[m[32m        private ILogger _logger ;[m
         public async Task<Result<AvailabilityDetails, ProblemDetails>> GetAvailabilities([m
             AvailabilityRequest availabilityRequest,[m
             string languageCode)[m
         {[m
             var language = LanguageUtils.GetLanguage(languageCode);[m
[31m-[m
[32m+[m[32m            _logger.LogInScope("second message", "availability");[m
             if (language == Language.Unknown)[m
                 return ProblemDetailsBuilder.Fail<AvailabilityDetails>($"{nameof(languageCode)} is unknown");[m
 [m
[1mdiff --git a/Hiroshima.WebApi/Startup.cs b/Hiroshima.WebApi/Startup.cs[m
[1mindex 1f09c2d..72a8abf 100644[m
[1m--- a/Hiroshima.WebApi/Startup.cs[m
[1m+++ b/Hiroshima.WebApi/Startup.cs[m
[36m@@ -1,9 +1,12 @@[m
 using System;[m
 using System.Globalization;[m
 using FloxDc.CacheFlow.Extensions;[m
[32m+[m[32musing HappyTravel.Logger;[m
 using HappyTravel.VaultClient;[m
[32m+[m[32musing Hiroshima.Common;[m
 using Hiroshima.DirectContracts;[m
 using Hiroshima.DirectContracts.Infrastructure.Options;[m
[32m+[m[32musing Hiroshima.WebApi.Infrastructure;[m
 using Hiroshima.WebApi.Services;[m
 using Microsoft.AspNetCore.Builder;[m
 using Microsoft.AspNetCore.Hosting;[m
[36m@@ -15,7 +18,7 @@[m [musing Microsoft.Extensions.DependencyInjection;[m
 using Microsoft.Extensions.Options;[m
 using NetTopologySuite;[m
 using Newtonsoft.Json;[m
[31m-using ConstantValues = Hiroshima.Common.Constants.ConstantValues;[m
[32m+[m
 [m
 namespace Hiroshima.WebApi[m
 {[m
[36m@@ -26,7 +29,7 @@[m [mnamespace Hiroshima.WebApi[m
             Configuration = configuration;[m
         }[m
 [m
[31m-        [m
[32m+[m
         public void ConfigureServices(IServiceCollection services)[m
         {[m
             services.AddControllers().AddJsonOptions(options =>[m
[36m@@ -35,7 +38,7 @@[m [mnamespace Hiroshima.WebApi[m
                 options.JsonSerializerOptions.IgnoreNullValues = true;[m
                 options.JsonSerializerOptions.PropertyNameCaseInsensitive = true;[m
             });[m
[31m-            [m
[32m+[m
             DbOptions bookingDbOptions;[m
             using (var vaultClient = new VaultClient(new VaultOptions[m
             {[m
[36m@@ -45,7 +48,8 @@[m [mnamespace Hiroshima.WebApi[m
             }, null))[m
             {[m
                 vaultClient.Login(Configuration[Configuration["Vault:Token"]]).GetAwaiter().GetResult();[m
[31m-                var dbOptions = vaultClient.Get(Configuration["DirectContracts:Database:Options"]).GetAwaiter().GetResult();[m
[32m+[m[32m                var dbOptions = vaultClient.Get(Configuration["DirectContracts:Database:Options"]).GetAwaiter()[m
[32m+[m[32m                    .GetResult();[m
                 bookingDbOptions = new DbOptions([m
                     dbOptions["host"],[m
                     int.Parse(dbOptions["port"]),[m
[36m@@ -53,7 +57,7 @@[m [mnamespace Hiroshima.WebApi[m
                     dbOptions["userId"],[m
                     dbOptions["password"]);[m
             }[m
[31m-            [m
[32m+[m
             services.AddApiVersioning(options =>[m
             {[m
                 options.AssumeDefaultVersionWhenUnspecified = false;[m
[36m@@ -66,9 +70,9 @@[m [mnamespace Hiroshima.WebApi[m
                 .AddFormatterMappings()[m
                 .AddApiExplorer()[m
                 .AddNewtonsoftJson(options =>[m
[31m-                    {[m
[31m-                        options.SerializerSettings.DateTimeZoneHandling = DateTimeZoneHandling.Unspecified;[m
[31m-                    })[m
[32m+[m[32m                {[m
[32m+[m[32m                    options.SerializerSettings.DateTimeZoneHandling = DateTimeZoneHandling.Unspecified;[m
[32m+[m[32m                })[m
                 .SetCompatibilityVersion(CompatibilityVersion.Version_3_0);[m
 [m
             services.AddCors()[m
[36m@@ -91,30 +95,32 @@[m [mnamespace Hiroshima.WebApi[m
                         new CultureInfo("fr"),[m
                         new CultureInfo("ru")[m
                     };[m
[31m-                    options.RequestCultureProviders.Insert(0, new RouteDataRequestCultureProvider { Options = options });[m
[32m+[m[32m                    options.RequestCultureProviders.Insert(0, new RouteDataRequestCultureProvider {Options = options});[m
                 });[m
 [m
             services.AddDirectContractsServices(bookingDbOptions);[m
[31m-            services.AddSingleton(NtsGeometryServices.Instance.CreateGeometryFactory(HappyTravel.Geography.GeoConstants.SpatialReferenceId));[m
[32m+[m[32m            services.AddSingleton([m
[32m+[m[32m                NtsGeometryServices.Instance.CreateGeometryFactory([m
[32m+[m[32m                    HappyTravel.Geography.GeoConstants.SpatialReferenceId));[m
             services.AddTransient<IAvailability, Availability>();[m
[32m+[m[32m            services.AddLogger();[m
         }[m
 [m
 [m
[31m-        public void Configure(IApplicationBuilder app, IWebHostEnvironment env, IOptions<RequestLocalizationOptions> localizationOptions)[m
[32m+[m[32m        public void Configure(IApplicationBuilder app, IWebHostEnvironment env,[m
[32m+[m[32m            IOptions<RequestLocalizationOptions> localizationOptions)[m
         {[m
             app.UseRouting();[m
             app.UseCors(builder => builder[m
                 .AllowAnyOrigin()[m
                 .AllowAnyHeader());[m
[32m+[m[32m            app.AddLoggerMiddleware();[m
             app.UseResponseCompression();[m
             app.UseRequestLocalization(localizationOptions.Value);[m
[31m-            app.UseEndpoints(endpoints =>[m
[31m-            {[m
[31m-                endpoints.MapControllers();[m
[31m-            });[m
[32m+[m[32m            app.UseEndpoints(endpoints => { endpoints.MapControllers(); });[m
         }[m
 [m
 [m
         public IConfiguration Configuration { get; }[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Hiroshima.WebApi/appsettings.Development.json b/Hiroshima.WebApi/appsettings.Development.json[m
[1mindex 370bb7b..6cd4c62 100644[m
[1m--- a/Hiroshima.WebApi/appsettings.Development.json[m
[1m+++ b/Hiroshima.WebApi/appsettings.Development.json[m
[36m@@ -1,7 +1,7 @@[m
 {[m
   "Logging": {[m
     "LogLevel": {[m
[31m-      "Default": "Debug"[m
[32m+[m[32m      "Default": "Information"[m
     }[m
   },[m
   "AllowedHosts": "*",[m
