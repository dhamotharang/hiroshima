// <auto-generated />
using System;
using System.Collections.Generic;
using Hiroshima.Common.Models;
using Hiroshima.Common.Models.Accommodation;
using Hiroshima.DbData;
using Hiroshima.DbData.Models.Accommodation;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Hiroshima.DbData.Migrations
{
    [DbContext(typeof(DirectContractsDbContext))]
    [Migration("20191023003436_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:postgis", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.AccommodationIdSeq", "'AccommodationIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.BookingIdSeq", "'BookingIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.LocalityIdSeq", "'LocalityIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.LocationIdSeq", "'LocationIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.PermittedOccupancyIdSeq", "'PermittedOccupancyIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.RateIdSeq", "'RateIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.RoomsIdSeq", "'RoomsIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SeasonIdSeq", "'SeasonIdSeq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.StopSaleDateIdSeq", "'StopSaleDateIdSeq', '', '1', '1', '', '', 'Int32', 'False'");

            modelBuilder.Entity("Hiroshima.DbData.Models.Accommodation.Accommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"AccommodationIdSeq\"')");

                    b.Property<Dictionary<string, MultiLanguage<string>>>("AdditionalInfo")
                        .HasColumnType("jsonb");

                    b.Property<List<MultiLanguage<string>>>("Amenities")
                        .HasColumnType("jsonb");

                    b.Property<Contacts>("Contacts")
                        .HasColumnType("jsonb");

                    b.Property<List<FeatureInfo>>("Features")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<string>>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Picture>("Picture")
                        .HasColumnType("jsonb");

                    b.Property<int>("PropertyType")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Schedule>("Schedule")
                        .HasColumnType("jsonb");

                    b.Property<TextualDescription>("TextualDescription")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Booking.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"BookingIdSeq\"')");

                    b.Property<DateTime>("BookedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CheckInAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CheckOutAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ContractRateId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("LeadPassengerName")
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .HasColumnType("text");

                    b.Property<string>("Residency")
                        .HasColumnType("text");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContractRateId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<MultiLanguage<string>>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.HasIndex("RegionId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Locality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"LocalityIdSeq\"')");

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<MultiLanguage<string>>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.ToTable("Localities");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"LocationIdSeq\"')");

                    b.Property<int>("AccommodationId")
                        .HasColumnType("integer");

                    b.Property<MultiLanguage<string>>("Address")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Point>("Coordinates")
                        .IsRequired()
                        .HasColumnType("geometry (point)");

                    b.Property<int>("LocalityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId")
                        .IsUnique();

                    b.HasIndex("LocalityId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<MultiLanguage<string>>("Name")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rates.ContractRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"RateIdSeq\"')");

                    b.Property<string>("BoardBasisCode")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("text");

                    b.Property<decimal>("ExtraPersonPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("ReleaseDays")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int>("SeasonId")
                        .HasColumnType("integer");

                    b.Property<decimal>("SeasonPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("SeasonId");

                    b.ToTable("ContractRates");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.PermittedOccupancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"PermittedOccupancyIdSeq\"')");

                    b.Property<int>("AdultsNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("ChildrenNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("PermittedOccupancies");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"RoomsIdSeq\"')");

                    b.Property<int>("AccommodationId")
                        .HasColumnType("integer");

                    b.Property<List<MultiLanguage<string>>>("Amenities")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<string>>("Description")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<string>>("Name")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"SeasonIdSeq\"')");

                    b.Property<int>("AccommodationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.StopSaleDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"StopSaleDateIdSeq\"')");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("StopSaleDates");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Booking.Booking", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rates.ContractRate", "ContractRate")
                        .WithMany("Bookings")
                        .HasForeignKey("ContractRateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Country", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Location.Region", "Region")
                        .WithMany("Countries")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Locality", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Location.Country", "Country")
                        .WithMany("Localities")
                        .HasForeignKey("CountryCode");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Location", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Accommodation.Accommodation", "Accommodation")
                        .WithOne("Location")
                        .HasForeignKey("Hiroshima.DbData.Models.Location.Location", "AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hiroshima.DbData.Models.Location.Locality", "Locality")
                        .WithMany("Locations")
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rates.ContractRate", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")
                        .WithMany("ContractRates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hiroshima.DbData.Models.Rooms.Season", "Season")
                        .WithMany("ContractRates")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.PermittedOccupancy", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")
                        .WithMany("PermittedOccupancies")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Room", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Accommodation.Accommodation", "Accommodation")
                        .WithMany("Rooms")
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Season", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Accommodation.Accommodation", "Accommodation")
                        .WithMany("Seasons")
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.StopSaleDate", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", "Room")
                        .WithMany("StopSaleDates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
