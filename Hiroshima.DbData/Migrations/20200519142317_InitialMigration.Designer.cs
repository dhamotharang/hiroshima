// <auto-generated />
using System;
using System.Collections.Generic;
using Hiroshima.Common.Models;
using Hiroshima.DbData;
using Hiroshima.DbData.Models.Accommodation;
using Hiroshima.DbData.Models.Booking;
using Hiroshima.DbData.Models.Rooms;
using Hiroshima.DbData.Models.Rooms.Occupancy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Hiroshima.DbData.Migrations
{
    [DbContext(typeof(DirectContractsDbContext))]
    [Migration("20200519142317_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:postgis", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Hiroshima.DbData.Models.Accommodation.Accommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<MultiLanguage<List<string>>>("AccommodationAmenities")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<Dictionary<string, string>>>("AdditionalInfo")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<string>>("Address")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("CheckInTime")
                        .HasColumnType("text");

                    b.Property<string>("CheckOutTime")
                        .HasColumnType("text");

                    b.Property<Contacts>("Contacts")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Point>("Coordinates")
                        .IsRequired()
                        .HasColumnType("geometry (point)");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<MultiLanguage<string>>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<List<Picture>>>("Pictures")
                        .HasColumnType("jsonb");

                    b.Property<int>("PropertyType")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<List<string>>("RoomAmenities")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<TextualDescription>>("TextualDescription")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Booking.BookingOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Residency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<RoomGuests>>("Rooms")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BookingOrders");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Location.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<MultiLanguage<string>>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccommodationId")
                        .HasColumnType("integer");

                    b.Property<MultiLanguage<List<string>>>("Amenities")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<string>>("Description")
                        .HasColumnType("jsonb");

                    b.Property<MultiLanguage<string>>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<PermittedOccupancies>("PermittedOccupancies")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomAllocationRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Allotment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("EndsToDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MinimumStayNights")
                        .HasColumnType("integer");

                    b.Property<ReleasePeriod>("ReleasePeriod")
                        .HasColumnType("jsonb");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartsFromDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAllocationRequirements");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomAvailabilityRestrictions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("EndsToDate")
                        .HasColumnType("jsonb");

                    b.Property<SaleRestrictions>("Restrictions")
                        .HasColumnType("jsonb");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartsFromDate")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAvailabilityRestrictions");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomPromotionalOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BookByDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("BookingCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<MultiLanguage<string>>("Details")
                        .HasColumnType("jsonb");

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("double precision");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ValidFromDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ValidToDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomPromotionalOffers");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BoardBasis")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndsToDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MealPlan")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartsFromDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomRates");
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Accommodation.Accommodation", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Location.Location", null)
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.Room", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Accommodation.Accommodation", null)
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomAllocationRequirement", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomAvailabilityRestrictions", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomPromotionalOffer", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hiroshima.DbData.Models.Rooms.RoomRate", b =>
                {
                    b.HasOne("Hiroshima.DbData.Models.Rooms.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
